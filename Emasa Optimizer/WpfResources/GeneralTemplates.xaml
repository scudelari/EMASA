<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Generic="clr-namespace:System.Collections.Generic;assembly=mscorlib"
    xmlns:baseLib="clr-namespace:BaseWPFLibrary.Converters;assembly=BaseWPFLibrary"
    xmlns:eb="clr-namespace:BaseWPFLibrary.Bindings;assembly=BaseWPFLibrary"
    xmlns:fea_loads="clr-namespace:Emasa_Optimizer.FEA.Loads"
    xmlns:fea_results="clr-namespace:Emasa_Optimizer.FEA.Results"
    xmlns:localParamDefinitions="clr-namespace:Emasa_Optimizer.Opt.ParamDefinitions"
    xmlns:opt="clr-namespace:Emasa_Optimizer.Opt"
    xmlns:probQuantity="clr-namespace:Emasa_Optimizer.Opt.ProbQuantity"
    xmlns:rg="clr-namespace:Rhino.Geometry;assembly=Rhino3dmIO"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:syswin="clr-namespace:System.Windows;assembly=PresentationFramework"
    xmlns:wpf="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
    xmlns:wpfHelpers="clr-namespace:Emasa_Optimizer.WpfResources"
    xmlns:wpfHelpersExt="clr-namespace:BaseWPFLibrary.Extensions;assembly=BaseWPFLibrary">

    <!--  Converters  -->
    <wpfHelpers:PercentageConverter x:Key="PercentageConverter" />
    <wpfHelpers:DefaultNumberConverter x:Key="DefaultNumberConverter" />
    <baseLib:EnumBooleanConverter x:Key="EnumBooleanConverter" />
    <baseLib:EnumBooleanConverter_NegateReadOnly x:Key="EnumBooleanConverter_NegateReadOnly" />
    <wpfHelpers:Wpf_EnumToString_Converter x:Key="Wpf_EnumToString_Converter" />
    <!--  Converter used to count the number of items in a FeResultClassification Table  -->
    <wpfHelpers:Wpf_FeResultClassificationTreeViewCounter_Converter x:Key="Wpf_FeResultClassificationTreeViewCounter_Converter" />



    <!--  Template Selectors  -->
    <wpfHelpers:Results_FunctionIterationSummary_ProblemQuantity_DataTemplateSelector x:Key="Results_FunctionIterationSummary_ProblemQuantity_DataTemplateSelector" />
    <wpfHelpers:Wpf_ResultList_Input_DataTemplateSelector x:Key="Wpf_ResultList_Input_DataTemplateSelector" />

    <!--  Chart Styles  -->
    <Style TargetType="wpf:Axis">
        <Setter Property="FontSize" Value="{StaticResource Size}" />
        <Setter Property="FontFamily" Value="Lucida Console" />

        <Setter Property="Foreground" Value="Black" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <!--  Styles  -->
    <Style x:Key="VisibleOnTagTrue_HiddenOnTagFalse" TargetType="{x:Type FrameworkElement}">
        <Style.Triggers>
            <Trigger Property="Tag" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="Tag" Value="False">
                <Setter Property="Visibility" Value="Hidden" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="VisibleOnTagTrue_CollapsedOnTagFalse" TargetType="{x:Type FrameworkElement}">
        <Style.Triggers>
            <Trigger Property="Tag" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="Tag" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <SolidColorBrush x:Key="EmsPanelBorder_Green" Color="Green" />
    <SolidColorBrush x:Key="EmsPanelBackground_Green" Color="#dbf5ce" />

    <SolidColorBrush x:Key="EmsPanelBorder_Red" Color="DarkRed" />
    <SolidColorBrush x:Key="EmsPanelBackground_Red" Color="LightSalmon" />

    <SolidColorBrush x:Key="EmsPanelBorder_Yellow" Color="DarkOrange" />
    <SolidColorBrush x:Key="EmsPanelBackground_Yellow" Color="LightGoldenrodYellow" />

    <SolidColorBrush x:Key="EmsPanelBorder_Gray" Color="Gray" />
    <SolidColorBrush x:Key="EmsPanelBackground_Gray" Color="LightGray" />

    <SolidColorBrush x:Key="EmsPanelBorder_LightGray" Color="#FFbfbfbf" />
    <SolidColorBrush x:Key="EmsPanelBackground_LightGray" Color="#FFf5f5f5" />

    <Style x:Key="RedGreenYellowGrayPanel" TargetType="{x:Type Control}">
        <Style.Triggers>
            <Trigger Property="Tag" Value="Red">
                <Setter Property="Background" Value="{StaticResource EmsPanelBackground_Red}" />
                <Setter Property="BorderBrush" Value="{StaticResource EmsPanelBorder_Red}" />
                <Setter Property="BorderThickness" Value="1" />
            </Trigger>
            <Trigger Property="Tag" Value="Green">
                <Setter Property="Background" Value="{StaticResource EmsPanelBackground_Green}" />
                <Setter Property="BorderBrush" Value="{StaticResource EmsPanelBorder_Green}" />
                <Setter Property="BorderThickness" Value="1" />
            </Trigger>
            <Trigger Property="Tag" Value="Yellow">
                <Setter Property="Background" Value="{StaticResource EmsPanelBackground_Yellow}" />
                <Setter Property="BorderBrush" Value="{StaticResource EmsPanelBorder_Yellow}" />
                <Setter Property="BorderThickness" Value="1" />
            </Trigger>
            <Trigger Property="Tag" Value="Gray">
                <Setter Property="Background" Value="{StaticResource EmsPanelBackground_Gray}" />
                <Setter Property="BorderBrush" Value="{StaticResource EmsPanelBorder_Gray}" />
                <Setter Property="BorderThickness" Value="1" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Ems_Border_Red" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource EmsPanelBackground_Red}" />
        <Setter Property="BorderBrush" Value="{StaticResource EmsPanelBorder_Red}" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>
    <Style x:Key="Ems_Border_Green" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource EmsPanelBackground_Green}" />
        <Setter Property="BorderBrush" Value="{StaticResource EmsPanelBorder_Green}" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>
    <Style x:Key="Ems_Border_Yellow" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource EmsPanelBackground_Yellow}" />
        <Setter Property="BorderBrush" Value="{StaticResource EmsPanelBorder_Yellow}" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>
    <Style x:Key="Ems_Border_Gray" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource EmsPanelBackground_Gray}" />
        <Setter Property="BorderBrush" Value="{StaticResource EmsPanelBorder_Gray}" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>

    <Style x:Key="RedGreenYellowGrayBorder" TargetType="{x:Type Border}">
        <Style.Triggers>
            <Trigger Property="Tag" Value="Red">
                <Setter Property="Background" Value="{StaticResource EmsPanelBackground_Red}" />
                <Setter Property="BorderBrush" Value="{StaticResource EmsPanelBorder_Red}" />
                <Setter Property="BorderThickness" Value="1" />
            </Trigger>
            <Trigger Property="Tag" Value="Green">
                <Setter Property="Background" Value="{StaticResource EmsPanelBackground_Green}" />
                <Setter Property="BorderBrush" Value="{StaticResource EmsPanelBorder_Green}" />
                <Setter Property="BorderThickness" Value="1" />
            </Trigger>
            <Trigger Property="Tag" Value="Yellow">
                <Setter Property="Background" Value="{StaticResource EmsPanelBackground_Yellow}" />
                <Setter Property="BorderBrush" Value="{StaticResource EmsPanelBorder_Yellow}" />
                <Setter Property="BorderThickness" Value="1" />
            </Trigger>
            <Trigger Property="Tag" Value="Gray">
                <Setter Property="Background" Value="{StaticResource EmsPanelBackground_Gray}" />
                <Setter Property="BorderBrush" Value="{StaticResource EmsPanelBorder_Gray}" />
                <Setter Property="BorderThickness" Value="1" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Default Element Style Override  -->
    <Style TargetType="{x:Type Border}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>
    <Style TargetType="{x:Type StackPanel}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>
    <Style TargetType="{x:Type Grid}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>
    <Style TargetType="{x:Type WrapPanel}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>
    <Style TargetType="{x:Type DockPanel}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <Style x:Key="NumberTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Lucida Console" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Margin" Value="0,2" />
    </Style>

    <Style x:Key="ListBoxContainerStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    </Style>

    <!--#region ListBox Headers-->
    <GridLength x:Key="VerticalScrollBarWidth">17</GridLength>
    <Style x:Key="ListBoxHeaderGrid" TargetType="{x:Type Grid}">
        <Setter Property="Height" Value="24" />
        <Setter Property="Margin" Value="0" />
        <Style.Resources>
            <Style TargetType="{x:Type Label}">
                <Setter Property="Padding" Value="5,2,5,2" />
                <Setter Property="BorderThickness" Value="0,1,1,1" />
                <Setter Property="Background" Value="{StaticResource EmsPanelBackground_LightGray}" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="BorderBrush" Value="{StaticResource EmsPanelBorder_LightGray}" />
            </Style>
        </Style.Resources>
    </Style>
    <!--#endregion-->

    <!--  Virtualised ItemsControl  -->
    <Style x:Key="VirtualItemsControl" TargetType="ItemsControl">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ItemsControl">
                    <Border
                        Padding="{TemplateBinding Control.Padding}"
                        Background="{TemplateBinding Panel.Background}"
                        BorderBrush="{TemplateBinding Border.BorderBrush}"
                        BorderThickness="{TemplateBinding Border.BorderThickness}"
                        SnapsToDevicePixels="True">
                        <ScrollViewer Padding="{TemplateBinding Control.Padding}" Focusable="False">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Borderless_ListBox" TargetType="{x:Type ListBox}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    </Style>
    <Style
        x:Key="VirtualListBox"
        BasedOn="{StaticResource Borderless_ListBox}"
        TargetType="{x:Type ListBox}">
        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
    </Style>
    <Style
        x:Key="VirtualListBox_VerticalScrollOptional"
        BasedOn="{StaticResource Borderless_ListBox}"
        TargetType="{x:Type ListBox}">
        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
    </Style>


    <SolidColorBrush x:Key="Item.Background.NoHighlight" Color="Blue" />
    <Style x:Key="ListViewContainerStyle_NoHighlight" TargetType="{x:Type ListViewItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border
                        Background="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Border}, AncestorLevel=3}, Path=Background}"
                        Focusable="False"
                        IsHitTestVisible="False"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ListBoxContainerStyle_NoHighlight" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border
                        Background="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Border}, AncestorLevel=3}, Path=Background}"
                        Focusable="False"
                        IsHitTestVisible="False"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Borderless_ListView" TargetType="{x:Type ListView}">
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style x:Key="GlowTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect
                    BlurRadius="10"
                    Opacity="1"
                    ShadowDepth="0"
                    Color="{StaticResource EmsFaintBlueColor}" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily" Value="Lucida Console" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="2,4,2,2" />
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames
                                BeginTime="0:0:0"
                                Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)"
                                Duration="0:0:1">
                                <LinearColorKeyFrame KeyTime="0:0:0" Value="Red" />
                                <LinearColorKeyFrame KeyTime="0:0:1" Value="White" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="Gh_GeometryNameAndType" DataType="{x:Type localParamDefinitions:GhGeom_ParamDefBase}">
        <TextBlock VerticalAlignment="Center">
            <Run FontWeight="Bold" Text="{Binding Name, Mode=OneWay, FallbackValue='Not found'}" />
            <Run Text=" " />
            <Run FontStyle="Italic" Text="{Binding Wpf_TypeNameString, Mode=OneWay, FallbackValue='Not found'}" />
        </TextBlock>
    </DataTemplate>

    <!--  Default Exhibit of a Problem Quantity Title (Squared number and two line description)  -->
    <DataTemplate x:Key="ProblemQuantityTitle_DisplayOnly" DataType="{x:Type probQuantity:ProblemQuantity}">
        <Grid ToolTip="{Binding QuantityAggregatorOptions.Wpf_SummaryToolTip}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="50" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Border
                Grid.Column="0"
                Width="30"
                Height="30"
                Padding="2"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Background="{StaticResource EmsFaintBlueSolidBrush}"
                BorderBrush="{StaticResource EmsLightBlueSolidBrush}"
                BorderThickness="1">
                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="{Binding Key.InternalId}" />
            </Border>
            <TextBlock
                Grid.Column="2"
                VerticalAlignment="Center"
                Text="{Binding QuantityAggregatorOptions.Wpf_AggregateTypeName}" />
            <Grid Grid.Column="4">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Border
                        Grid.Column="0"
                        Background="Transparent"
                        BorderBrush="{StaticResource EmsDarkBlueSolidBrush}"
                        BorderThickness="2,2,0,2" />
                    <Border
                        Grid.Column="2"
                        Background="Transparent"
                        BorderBrush="{StaticResource EmsDarkBlueSolidBrush}"
                        BorderThickness="0,2,2,2" />
                </Grid>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Border
                        Grid.Row="0"
                        Grid.Column="0"
                        BorderBrush="{StaticResource EmsFaintBlueSolidBrush}"
                        BorderThickness="0,0,0,1">
                        <TextBlock
                            FontFamily="Courier New"
                            FontWeight="Bold"
                            Text="{Binding Key.QuantitySource.Wpf_ProblemQuantityName, Mode=OneWay}" />
                    </Border>
                    <TextBlock
                        Grid.Row="1"
                        Grid.Column="0"
                        Style="{StaticResource Explanation_TextBlock}"
                        Text="{Binding Key.QuantitySource.Wpf_ProblemQuantityGroup, Mode=OneWay}" />
                </Grid>
            </Grid>
        </Grid>
    </DataTemplate>

    <!--  Gh Non-Linear Variables Input - Doubles and Points  -->
    <wpfHelpers:GhNonLinearParameter_Setup_ListBox_TemplateSelector x:Key="GhNonLinearParameter_Setup_ListBox_TemplateSelector" />
    <DataTemplate x:Key="GhNonLinearParameter_Setup_ListBox_ItemTemplate_Double_Input_ParamDef" DataType="{x:Type localParamDefinitions:Double_Input_ParamDef}">
        <Border
            Margin="0,0,0,10"
            BorderBrush="{StaticResource EmsFaintBlueSolidBrush}"
            BorderThickness="0,0,0,1">
            <Grid Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1.5*" />
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="2*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <TextBlock
                    Grid.Row="0"
                    Grid.Column="0"
                    Height="20"
                    FontWeight="Bold"
                    Text="{Binding Name, Mode=OneWay, FallbackValue='Not found'}" />
                <TextBlock
                    Grid.Row="1"
                    Grid.Column="0"
                    Height="20"
                    FontStyle="Italic"
                    Text="{Binding TypeName, Mode=OneWay, FallbackValue='Not found'}" />

                <Grid
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="1"
                    Height="20"
                    Margin="10,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        Foreground="{DynamicResource EmsFaintBlueSolidBrush}"
                        Text="├───" />
                    <TextBox Grid.Column="1" Text="{Binding SearchRange.Range.Min, FallbackValue='Not Found'}" />
                    <TextBlock
                        Grid.Column="2"
                        Foreground="{DynamicResource EmsFaintBlueSolidBrush}"
                        Text="─────" />
                    <TextBox Grid.Column="3" Text="{Binding SearchRange.Range.Max, FallbackValue='Not Found'}" />
                    <TextBlock
                        Grid.Column="4"
                        Foreground="{DynamicResource EmsFaintBlueSolidBrush}"
                        Text="───┤" />
                </Grid>
                <Grid
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="2"
                    VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="20" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <ComboBox
                        Grid.Row="0"
                        Grid.Column="0"
                        Grid.ColumnSpan="3"
                        Height="22"
                        Margin="0,0,0,5"
                        VerticalAlignment="Center"
                        DisplayMemberPath="Value"
                        ItemsSource="{Binding StartPositionTypeEnumStaticDescriptions}"
                        SelectedValue="{Binding StartPositionType}"
                        SelectedValuePath="Key" />
                    <DockPanel
                        Grid.Row="1"
                        Grid.Column="0"
                        Visibility="{Binding StartValue_TextBoxVisibility}">
                        <TextBlock
                            Margin="0,0,5,0"
                            DockPanel.Dock="Left"
                            Text="Value" />
                        <TextBox wpfHelpers:DepObjs.CancelErrorOnLostFocus="true" Text="{Binding Start, ValidatesOnExceptions=True}" />
                    </DockPanel>
                    <DockPanel
                        Grid.Row="1"
                        Grid.Column="2"
                        Visibility="{Binding StartPositionPercent_TextBoxVisibility}">
                        <TextBlock
                            Margin="0,0,5,0"
                            DockPanel.Dock="Left"
                            Text="%" />
                        <TextBox wpfHelpers:DepObjs.CancelErrorOnLostFocus="true" Text="{Binding StartPositionPercent, ValidatesOnExceptions=True}" />
                    </DockPanel>
                </Grid>
            </Grid>
        </Border>
    </DataTemplate>
    <DataTemplate x:Key="GhNonLinearParameter_Setup_ListBox_ItemTemplate_Point_Input_ParamDef" DataType="{x:Type localParamDefinitions:Point_Input_ParamDef}">
        <Border
            Margin="0,0,0,10"
            BorderBrush="{StaticResource EmsFaintBlueSolidBrush}"
            BorderThickness="0,0,0,1">
            <Grid Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1.5*" />
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="2*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <TextBlock
                    Grid.Row="0"
                    Grid.Column="0"
                    Height="20"
                    FontWeight="Bold"
                    Text="{Binding Name, Mode=OneWay, FallbackValue='Not found'}" />
                <TextBlock
                    Grid.Row="1"
                    Grid.Column="0"
                    Height="20"
                    FontStyle="Italic"
                    Text="{Binding TypeName, Mode=OneWay, FallbackValue='Not found'}" />

                <Grid
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TextBox
                        Grid.Row="0"
                        Grid.Column="1"
                        IsReadOnly="True"
                        Text="{Binding SearchRange.WpfMinString_X, Mode=OneWay, FallbackValue='Not Found'}" />
                    <TextBox
                        Grid.Row="0"
                        Grid.Column="3"
                        IsReadOnly="True"
                        Text="{Binding SearchRange.WpfMaxString_X, Mode=OneWay, FallbackValue='Not Found'}" />
                    <TextBlock
                        Grid.Row="1"
                        Grid.Column="0"
                        Foreground="{DynamicResource EmsFaintBlueSolidBrush}"
                        Text="├───" />
                    <TextBox
                        Grid.Row="1"
                        Grid.Column="1"
                        IsReadOnly="True"
                        Text="{Binding SearchRange.WpfMinString_Y, Mode=OneWay, FallbackValue='Not Found'}" />
                    <TextBlock
                        Grid.Row="1"
                        Grid.Column="2"
                        Foreground="{DynamicResource EmsFaintBlueSolidBrush}"
                        Text="─────" />
                    <TextBox
                        Grid.Row="1"
                        Grid.Column="3"
                        IsReadOnly="True"
                        Text="{Binding SearchRange.WpfMaxString_Y, Mode=OneWay, FallbackValue='Not Found'}" />
                    <TextBlock
                        Grid.Row="1"
                        Grid.Column="4"
                        Foreground="{DynamicResource EmsFaintBlueSolidBrush}"
                        Text="───┤" />
                    <TextBox
                        Grid.Row="2"
                        Grid.Column="1"
                        IsReadOnly="True"
                        Text="{Binding SearchRange.WpfMinString_Z, Mode=OneWay, FallbackValue='Not Found'}" />
                    <TextBox
                        Grid.Row="2"
                        Grid.Column="3"
                        IsReadOnly="True"
                        Text="{Binding SearchRange.WpfMaxString_Z, Mode=OneWay, FallbackValue='Not Found'}" />
                </Grid>

                <Grid
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="2"
                    VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="20" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <ComboBox
                        Grid.Row="0"
                        Grid.Column="0"
                        Grid.ColumnSpan="3"
                        Height="22"
                        Margin="0,0,0,5"
                        VerticalAlignment="Center"
                        DisplayMemberPath="Value"
                        ItemsSource="{Binding StartPositionTypeEnumStaticDescriptions}"
                        SelectedValue="{Binding StartPositionType}"
                        SelectedValuePath="Key" />
                    <DockPanel
                        Grid.Row="1"
                        Grid.Column="0"
                        Visibility="{Binding StartValue_TextBoxVisibility}">
                        <TextBlock
                            Margin="0,0,5,0"
                            DockPanel.Dock="Left"
                            Text="Value" />
                        <TextBox wpfHelpers:DepObjs.CancelErrorOnLostFocus="true" Text="{Binding WpfStart, ValidatesOnExceptions=True}" />
                    </DockPanel>
                    <DockPanel
                        Grid.Row="1"
                        Grid.Column="2"
                        Visibility="{Binding StartPositionPercent_TextBoxVisibility}">
                        <TextBlock
                            Margin="0,0,5,0"
                            DockPanel.Dock="Left"
                            Text="%" />
                        <TextBox wpfHelpers:DepObjs.CancelErrorOnLostFocus="true" Text="{Binding StartPositionPercent, ValidatesOnExceptions=True}" />
                    </DockPanel>
                </Grid>
            </Grid>
        </Border>
    </DataTemplate>


    <!--  Gh Output Geometry - Lines and Points - Restraint Edit  -->
    <DataTemplate x:Key="GhOutputGeometry_Setup_ListBox_ItemTemplate_IghElement_HasRestraint_Edit">
        <Grid Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <ContentControl
                Grid.Column="0"
                Content="{Binding}"
                ContentTemplate="{StaticResource Gh_GeometryNameAndType}" />

            <Grid Grid.Column="1" Visibility="{Binding ElementName=MainGrid, Path=DataContext.FeOpt.IsFeProblem}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <CheckBox
                    Grid.Column="0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Content="U1"
                    IsChecked="{Binding Restraint.U1}" />
                <CheckBox
                    Grid.Column="1"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Content="U2"
                    IsChecked="{Binding Restraint.U2}" />
                <CheckBox
                    Grid.Column="2"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Content="U3"
                    IsChecked="{Binding Restraint.U3}" />
                <CheckBox
                    Grid.Column="3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Content="R1"
                    IsChecked="{Binding Restraint.R1}" />
                <CheckBox
                    Grid.Column="4"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Content="R2"
                    IsChecked="{Binding Restraint.R2}" />
                <CheckBox
                    Grid.Column="5"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Content="R3"
                    IsChecked="{Binding Restraint.R3}" />
                <Button
                    Grid.Column="6"
                    Width="20"
                    Height="20"
                    Padding="0"
                    HorizontalAlignment="Center"
                    Command="{Binding Restraint.SetFullyFixedCommand}"
                    ToolTip="Fixed">
                    <Button.Content>
                        <TextBlock
                            FontFamily="Segoe UI Symbol"
                            FontSize="16"
                            Text="♯">
                            <TextBlock.RenderTransform>
                                <TranslateTransform>
                                    <TranslateTransform.Y>-1</TranslateTransform.Y>
                                </TranslateTransform>
                            </TextBlock.RenderTransform>
                        </TextBlock>
                    </Button.Content>
                </Button>
                <Button
                    Grid.Column="7"
                    Width="20"
                    Height="20"
                    HorizontalAlignment="Center"
                    Command="{Binding Restraint.SetPinnedCommand}"
                    ToolTip="Pinned">
                    <Button.Content>
                        <TextBlock
                            FontFamily="Segoe UI Symbol"
                            FontSize="16"
                            Text="">
                            <TextBlock.RenderTransform>
                                <TranslateTransform>
                                    <TranslateTransform.Y>-3</TranslateTransform.Y>
                                </TranslateTransform>
                            </TextBlock.RenderTransform>
                        </TextBlock>
                    </Button.Content>
                </Button>
            </Grid>
        </Grid>
    </DataTemplate>

    <!--  Problem Quantity Source Two Line Designation = Without the Index Number  -->
    <DataTemplate x:Key="IProblemQuantitySource_Designation" DataType="{x:Type probQuantity:IProblemQuantitySource}">
        <Grid ToolTip="{Binding Wpf_Explanation, Mode=OneWay}">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Border
                Grid.Row="0"
                HorizontalAlignment="Stretch"
                Style="{StaticResource LightBlue_BottomOnly_Border}">
                <TextBlock FontWeight="Bold" Text="{Binding Wpf_ProblemQuantityName, Mode=OneWay}" />
            </Border>
            <TextBlock
                Grid.Row="1"
                Margin="0,0,5,0"
                Style="{StaticResource Explanation_TextBlock}"
                Text="{Binding Wpf_ProblemQuantityGroup, Mode=OneWay}" />
        </Grid>
    </DataTemplate>

    <!--  Problem Quantity = Index and Two Line Designation  -->
    <DataTemplate x:Key="ProblemQuantity_IndexAndDesignation" DataType="{x:Type probQuantity:ProblemQuantity}">
        <Grid ToolTip="Designation of the problem Quantity. These will be used exclusively for output.">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border
                Grid.RowSpan="3"
                Grid.Column="0"
                Width="30"
                Height="30"
                Padding="2"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Background="{StaticResource EmsFaintBlueSolidBrush}"
                BorderBrush="{StaticResource EmsLightBlueSolidBrush}"
                BorderThickness="1">
                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="{Binding InternalId}" />
            </Border>
            <ContentControl
                Grid.Column="2"
                Content="{Binding QuantitySource}"
                ContentTemplate="{StaticResource IProblemQuantitySource_Designation}" />
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="ProblemQuantity_IndexDesignationAndDetails" DataType="{x:Type probQuantity:ProblemQuantity}">
        <Border x:Name="main_border" Margin="0,3,3,3">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="130" />
                </Grid.ColumnDefinitions>

                <ContentControl
                    Grid.Column="0"
                    Margin="5,5,0,5"
                    VerticalAlignment="Center"
                    Content="{Binding}"
                    ContentTemplate="{StaticResource ProblemQuantity_IndexAndDesignation}" />

                <StackPanel
                    Grid.Column="2"
                    VerticalAlignment="Center"
                    Orientation="Vertical">
                    <TextBlock
                        x:Name="constObjective"
                        HorizontalAlignment="Center"
                        Style="{StaticResource NumberTextBlock}">
                        <Run Text="c(x)" />
                        <Run Text="{Binding WpfSummaryFunctionObjective_ConstraintObjective_DisplayOnly, Mode=OneWay}" />
                        <Run Text="{Binding ConstraintObjective_CompareValue, Mode=OneWay, Converter={StaticResource DefaultNumberConverter}}" />
                    </TextBlock>

                    <StackPanel
                        x:Name="funcObjective"
                        HorizontalAlignment="Center"
                        Orientation="Horizontal">
                        <TextBlock
                            VerticalAlignment="Center"
                            Style="{StaticResource NumberTextBlock}"
                            Text="f(x)" />
                        <TextBlock
                            VerticalAlignment="Center"
                            FontSize="18"
                            RenderTransformOrigin="0.5,0.5"
                            Text="{Binding WpfSummaryFunctionObjective_DisplayOnly.Item1}"
                            ToolTip="{Binding WpfSummaryFunctionObjective_DisplayOnly.Item3}">
                            <TextBlock.RenderTransform>
                                <RotateTransform Angle="{Binding WpfSummaryFunctionObjective_DisplayOnly.Item2}" />
                            </TextBlock.RenderTransform>
                        </TextBlock>
                        <TextBlock
                            Style="{StaticResource NumberTextBlock}"
                            Text="{Binding FunctionObjective_TargetValue, Mode=OneWay, Converter={StaticResource DefaultNumberConverter}}"
                            Visibility="{Binding WpfSummaryFunctionObjective_FunctionObjective_TargetValue_TextBlockVisibility, Mode=OneWay}" />
                    </StackPanel>

                    <TextBlock
                        HorizontalAlignment="Center"
                        Style="{StaticResource NumberTextBlock}"
                        Text="{Binding QuantityAggregatorOptions.WpfTextDescription, Mode=OneWay}"
                        ToolTip="{Binding QuantityAggregatorOptions.Wpf_SummaryToolTip, Mode=OneWay}" />
                </StackPanel>
            </Grid>
        </Border>
        <DataTemplate.Triggers>
            <!--  Outer Border  -->
            <DataTrigger Binding="{Binding IsConstraint}" Value="{StaticResource True}">
                <Setter TargetName="main_border" Property="Style" Value="{StaticResource Ems_Border_Yellow}" />
                <Setter TargetName="constObjective" Property="Visibility" Value="Visible" />
                <Setter TargetName="funcObjective" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsOutputOnly}" Value="{StaticResource True}">
                <Setter TargetName="main_border" Property="Style" Value="{StaticResource Ems_Border_Gray}" />
                <Setter TargetName="constObjective" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="funcObjective" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsObjectiveFunctionMinimize}" Value="{StaticResource True}">
                <Setter TargetName="main_border" Property="Style" Value="{StaticResource Ems_Border_Green}" />
                <Setter TargetName="constObjective" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="funcObjective" Property="Visibility" Value="Visible" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>



    <!--  Problem Configuration Set-up - List of GhLines to which sections will be attached  -->
    <DataTemplate x:Key="PcOpt_GhLineListSections_ListBox_ItemTemplate_GhLineList" DataType="{x:Type localParamDefinitions:LineList_GhGeom_ParamDef}">
        <Grid Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="50" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Button
                Grid.Column="0"
                Click="{eb:MethodBinding {Binding},
                                         Wpf_AddSelectedSectionsCombine}"
                Content="➜" />
            <TextBlock
                Grid.Column="2"
                VerticalAlignment="Center"
                Text="{Binding Name}" />
            <TextBlock Grid.Column="4" VerticalAlignment="Center">
                <Run Text="[" />
                <Run Text="{Binding WpfFeSections_ToCombine_Count, Mode=OneWay}" />
                <Run Text="]" />
            </TextBlock>
            <Button
                Grid.Column="6"
                Click="{eb:MethodBinding {Binding},
                                         Wpf_ClearSelectedSectionsCombine}"
                Content="❌" />
        </Grid>
    </DataTemplate>
    <!--  Problem Configuration Set-up - List of GhIntegers to which sections will be attached  -->
    <DataTemplate x:Key="PcOpt_GhIntegerConfigInputs_ListBox_ItemTemplate_GhIntegerConfig" DataType="{x:Type localParamDefinitions:Integer_GhConfig_ParamDef}">
        <Grid Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="50" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Button
                Grid.Column="0"
                Click="{eb:MethodBinding {Binding},
                                         Wpf_AddIntegersCombine}"
                Content="➜" />
            <TextBlock
                Grid.Column="2"
                VerticalAlignment="Center"
                Text="{Binding Name}" />
            <TextBlock Grid.Column="4" VerticalAlignment="Center">
                <Run Text="[" />
                <Run Text="{Binding WpfIntegers_ToCombine_Count, Mode=OneWay}" />
                <Run Text="]" />
            </TextBlock>
            <Button
                Grid.Column="6"
                Click="{eb:MethodBinding {Binding},
                                         Wpf_ClearSelectedIntegersCombine}"
                Content="❌" />
        </Grid>
    </DataTemplate>



    <!--  Problem Quantities selected for output, constraint or objective function  -->
    <DataTemplate x:Key="ProbQuantMgn_SelectedQuantities_ObjectiveFunction_ListBox_ItemTemplate" DataType="{x:Type probQuantity:ProblemQuantity}">
        <Border
            Margin="0,0,0,0"
            Padding="0"
            BorderBrush="{StaticResource EmsFaintBlueSolidBrush}"
            BorderThickness="0,0,0,1"
            IsEnabled="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.SolveMgr.Wpf_ConfigurationsHaveBeenGenerated, Mode=OneWay, Converter={StaticResource InverseBooleanConverter}}"
            Style="{DynamicResource MainItemBorder}">
            <Grid Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="0.6*" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="22" />
                </Grid.ColumnDefinitions>

                <ContentControl
                    Grid.Row="0"
                    Grid.Column="0"
                    Margin="0,0,0,5"
                    VerticalAlignment="Center"
                    Content="{Binding}"
                    ContentTemplate="{StaticResource ProblemQuantity_IndexAndDesignation}" />

                <Grid
                    Grid.Row="0"
                    Grid.Column="2"
                    HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="20" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <TextBlock
                        Grid.Row="0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontSize="14"
                        RenderTransformOrigin="0.5,0.5"
                        Style="{StaticResource GlowTextBlock}"
                        Text="f(x)"
                        ToolTip="Function Objective" />
                    <ComboBox
                        Grid.Row="0"
                        Grid.Column="2"
                        VerticalAlignment="Center"
                        ItemsSource="{Binding Quantity_FunctionObjectiveEnumDescriptions}"
                        SelectedValue="{Binding FunctionObjective}"
                        SelectedValuePath="Key"
                        ToolTip="Function Objective">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock
                                    RenderTransformOrigin="0.5,0.5"
                                    Text="{Binding Value.Item1}"
                                    ToolTip="{Binding Value.Item3}">
                                    <TextBlock.RenderTransform>
                                        <RotateTransform Angle="{Binding Value.Item2}" />
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <TextBox
                        Grid.Row="0"
                        Grid.Column="4"
                        VerticalAlignment="Center"
                        wpfHelpers:DepObjs.CancelErrorOnLostFocus="True"
                        Text="{Binding FunctionObjective_TargetValue, ValidatesOnExceptions=True}"
                        ToolTip="Function Objective"
                        Visibility="{Binding FunctionObjective_TargetValue_TextBoxVisibility}" />
                    <TextBlock
                        Grid.Row="1"
                        Grid.Column="0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontSize="25"
                        RenderTransformOrigin="0.5,0.5"
                        Style="{StaticResource GlowTextBlock}"
                        Text="⥷"
                        ToolTip="Manner used to aggregate the values">
                        <TextBlock.RenderTransform>
                            <TransformGroup>
                                <RotateTransform Angle="180" />
                                <TranslateTransform Y="4" />
                            </TransformGroup>
                        </TextBlock.RenderTransform>
                    </TextBlock>
                    <ComboBox
                        Grid.Row="1"
                        Grid.Column="2"
                        Grid.ColumnSpan="3"
                        VerticalAlignment="Center"
                        DisplayMemberPath="Value"
                        ItemsSource="{Binding QuantityAggregatorOptions.Quantity_AggregateTypeEnumDescriptions}"
                        SelectedValue="{Binding QuantityAggregatorOptions.AggregateType}"
                        SelectedValuePath="Key"
                        ToolTip="Manner used to aggregate the values" />
                </Grid>

                <Grid
                    Grid.Row="0"
                    Grid.Column="4"
                    VerticalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <!--<RowDefinition Height="Auto" />-->
                    </Grid.RowDefinitions>
                    <Grid
                        Grid.Row="0"
                        Height="18"
                        Margin="0,0,0,3"
                        ToolTip="Filter the concerned results by a given Grasshopper group."
                        Visibility="{Binding FilterEntity_GridVisibility}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="5" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <CheckBox
                            VerticalAlignment="Center"
                            Content=""
                            FontFamily="Segoe UI Symbol"
                            IsChecked="{Binding QuantityAggregatorOptions.UseEntityFilter}" />
                        <ComboBox
                            Grid.Column="2"
                            HorizontalAlignment="Stretch"
                            IsEnabled="{Binding QuantityAggregatorOptions.UseEntityFilter}"
                            ItemsSource="{Binding ElementName=MainGrid, Path=DataContext.Gh_Alg.GeometryDefs_PointLineListBundle_View}"
                            SelectedValue="{Binding QuantityAggregatorOptions.EntityToFilter}"
                            Visibility="{Binding QuantityAggregatorOptions.EntityFilter_ComboBoxVisibility}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock>
                                        <Run FontWeight="Bold" Text="{Binding Name, Mode=OneWay}" />
                                        <Run Text=" " />
                                        <Run Foreground="{StaticResource EmsExplanationSolidBrush}" Text="{Binding TypeName, Mode=OneWay}" />
                                    </TextBlock>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </Grid>
                    <CheckBox
                        Grid.Row="1"
                        Height="18"
                        Margin="0,0,0,3"
                        IsChecked="{Binding QuantityAggregatorOptions.UseTableAbsoluteValues}"
                        SnapsToDevicePixels="True"
                        ToolTip="Use absolute values of the concerned results.">
                        <Border
                            Padding="2,0"
                            BorderBrush="Black"
                            BorderThickness="3,0">
                            <TextBlock Text="X" />
                        </Border>

                    </CheckBox>
                    <!--<Grid Grid.Row="2" ToolTip="Scales the values from this defined scale to [0...1]. Use this to use more than one quantity in the Objective Function.">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="5" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <CheckBox
                            Grid.Column="0"
                            VerticalAlignment="Center"
                            Content="Scale"
                            IsChecked="{Binding QuantityAggregatorOptions.HasScale}" />
                        <Grid Grid.Column="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock
                                Grid.Column="0"
                                Foreground="{DynamicResource EmsFaintBlueSolidBrush}"
                                Text="├─" />
                            <TextBox
                                Grid.Column="1"
                                wpfHelpers:DepObjs.CancelErrorOnLostFocus="True"
                                IsEnabled="{Binding QuantityAggregatorOptions.HasScale}"
                                Text="{Binding QuantityAggregatorOptions.ScaleRange.WpfMinString, ValidatesOnExceptions=true}" />
                            <TextBlock
                                Grid.Column="2"
                                Foreground="{DynamicResource EmsFaintBlueSolidBrush}"
                                Text="──" />
                            <TextBox
                                Grid.Column="3"
                                wpfHelpers:DepObjs.CancelErrorOnLostFocus="True"
                                IsEnabled="{Binding QuantityAggregatorOptions.HasScale}"
                                Text="{Binding QuantityAggregatorOptions.ScaleRange.WpfMaxString, ValidatesOnExceptions=true}" />
                            <TextBlock
                                Grid.Column="4"
                                Foreground="{DynamicResource EmsFaintBlueSolidBrush}"
                                Text="─┤" />
                        </Grid>
                    </Grid>-->
                </Grid>


                <Button
                    Grid.Column="6"
                    Width="22"
                    Height="22"
                    Margin="0"
                    Click="{eb:MethodBinding DeleteProblemQuantity}"
                    Content="❌" />

            </Grid>
        </Border>
    </DataTemplate>
    <DataTemplate x:Key="ProbQuantMgn_SelectedQuantities_Constraints_ListBox_ItemTemplate" DataType="{x:Type probQuantity:ProblemQuantity}">
        <Border
            Margin="0,0,0,0"
            Padding="0"
            BorderBrush="{StaticResource EmsFaintBlueSolidBrush}"
            BorderThickness="0,0,0,1"
            IsEnabled="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.SolveMgr.Wpf_ConfigurationsHaveBeenGenerated, Mode=OneWay, Converter={StaticResource InverseBooleanConverter}}"
            Style="{DynamicResource MainItemBorder}">
            <Grid Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="0.6*" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="22" />
                </Grid.ColumnDefinitions>

                <ContentControl
                    Grid.Row="0"
                    Grid.Column="0"
                    Margin="0,0,0,5"
                    VerticalAlignment="Center"
                    Content="{Binding}"
                    ContentTemplate="{StaticResource ProblemQuantity_IndexAndDesignation}" />

                <Grid
                    Grid.Row="0"
                    Grid.Column="2"
                    HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="20" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <TextBlock
                        Grid.Row="0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontSize="14"
                        RenderTransformOrigin="0.5,0.5"
                        Style="{StaticResource GlowTextBlock}"
                        Text="c(x)"
                        ToolTip="Constraint Objective" />
                    <ComboBox
                        Grid.Row="0"
                        Grid.Column="2"
                        VerticalAlignment="Center"
                        DisplayMemberPath="Value"
                        ItemsSource="{Binding Quantity_ConstraintObjectiveEnumDescriptions}"
                        SelectedValue="{Binding ConstraintObjective}"
                        SelectedValuePath="Key"
                        ToolTip="Constraint Objective" />
                    <TextBox
                        Grid.Row="0"
                        Grid.Column="4"
                        VerticalAlignment="Center"
                        wpfHelpers:DepObjs.CancelErrorOnLostFocus="True"
                        Text="{Binding ConstraintObjective_CompareValue, ValidatesOnExceptions=True}"
                        ToolTip="Constraint Objective" />
                    <TextBlock
                        Grid.Row="1"
                        Grid.Column="0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontSize="25"
                        RenderTransformOrigin="0.5,0.5"
                        Style="{StaticResource GlowTextBlock}"
                        Text="⥷"
                        ToolTip="Manner used to aggregate the values">
                        <TextBlock.RenderTransform>
                            <TransformGroup>
                                <RotateTransform Angle="180" />
                                <TranslateTransform Y="4" />
                            </TransformGroup>
                        </TextBlock.RenderTransform>

                    </TextBlock>
                    <ComboBox
                        Grid.Row="1"
                        Grid.Column="2"
                        Grid.ColumnSpan="3"
                        VerticalAlignment="Center"
                        DisplayMemberPath="Value"
                        ItemsSource="{Binding QuantityAggregatorOptions.Quantity_AggregateTypeEnumDescriptions}"
                        SelectedValue="{Binding QuantityAggregatorOptions.AggregateType}"
                        SelectedValuePath="Key"
                        ToolTip="Manner used to aggregate the values" />
                </Grid>

                <Grid
                    Grid.Row="0"
                    Grid.Column="4"
                    VerticalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid
                        Grid.Row="0"
                        Height="18"
                        Margin="0,0,0,3"
                        ToolTip="Filter the concerned results by a given Grasshopper group."
                        Visibility="{Binding FilterEntity_GridVisibility}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="5" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <CheckBox
                            VerticalAlignment="Center"
                            Content=""
                            FontFamily="Segoe UI Symbol"
                            IsChecked="{Binding QuantityAggregatorOptions.UseEntityFilter}" />
                        <ComboBox
                            Grid.Column="2"
                            HorizontalAlignment="Stretch"
                            IsEnabled="{Binding QuantityAggregatorOptions.UseEntityFilter}"
                            ItemsSource="{Binding ElementName=MainGrid, Path=DataContext.Gh_Alg.GeometryDefs_PointLineListBundle_View}"
                            SelectedValue="{Binding QuantityAggregatorOptions.EntityToFilter}"
                            Visibility="{Binding QuantityAggregatorOptions.EntityFilter_ComboBoxVisibility}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock>
                                        <Run FontWeight="Bold" Text="{Binding Name, Mode=OneWay}" />
                                        <Run Text=" " />
                                        <Run Foreground="{StaticResource EmsExplanationSolidBrush}" Text="{Binding TypeName, Mode=OneWay}" />
                                    </TextBlock>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </Grid>
                    <CheckBox
                        Grid.Row="1"
                        IsChecked="{Binding QuantityAggregatorOptions.UseTableAbsoluteValues}"
                        SnapsToDevicePixels="True"
                        ToolTip="Use absolute values of the concerned results.">
                        <Border
                            Padding="2,0"
                            BorderBrush="Black"
                            BorderThickness="3,0">
                            <TextBlock Text="X" />
                        </Border>

                    </CheckBox>

                </Grid>


                <Button
                    Grid.Column="6"
                    Width="22"
                    Height="22"
                    Margin="0"
                    Click="{eb:MethodBinding DeleteProblemQuantity}"
                    Content="❌" />
            </Grid>
        </Border>
    </DataTemplate>
    <DataTemplate x:Key="ProbQuantMgn_SelectedQuantities_OutputOnly_ListBox_ItemTemplate" DataType="{x:Type probQuantity:ProblemQuantity}">
        <Border
            Margin="0,0,0,0"
            Padding="0"
            BorderBrush="{StaticResource EmsFaintBlueSolidBrush}"
            BorderThickness="0,0,0,1"
            IsEnabled="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.SolveMgr.Wpf_ConfigurationsHaveBeenGenerated, Mode=OneWay, Converter={StaticResource InverseBooleanConverter}}"
            Style="{DynamicResource MainItemBorder}">
            <Grid Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="0.6*" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="22" />
                </Grid.ColumnDefinitions>

                <ContentControl
                    Grid.Row="0"
                    Grid.Column="0"
                    Margin="0,0,0,5"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Content="{Binding}"
                    ContentTemplate="{StaticResource ProblemQuantity_IndexAndDesignation}" />

                <Grid
                    Grid.Row="0"
                    Grid.Column="2"
                    HorizontalAlignment="Stretch"
                    ToolTip="Manner used to aggregate the values">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="20" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Row="0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontSize="25"
                        RenderTransformOrigin="0.5,0.5"
                        Text="⥷">
                        <TextBlock.RenderTransform>
                            <TransformGroup>
                                <RotateTransform Angle="180" />
                                <TranslateTransform Y="4" />
                            </TransformGroup>
                        </TextBlock.RenderTransform>
                        <TextBlock.Effect>
                            <DropShadowEffect
                                BlurRadius="10"
                                Opacity="1"
                                ShadowDepth="0"
                                Color="{StaticResource EmsFaintBlueColor}" />
                        </TextBlock.Effect>
                    </TextBlock>
                    <ComboBox
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        DisplayMemberPath="Value"
                        ItemsSource="{Binding QuantityAggregatorOptions.Quantity_AggregateTypeEnumDescriptions}"
                        SelectedValue="{Binding QuantityAggregatorOptions.AggregateType}"
                        SelectedValuePath="Key" />
                </Grid>

                <Grid
                    Grid.Row="0"
                    Grid.Column="4"
                    VerticalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid
                        Grid.Row="0"
                        Height="18"
                        Margin="0,0,0,3"
                        ToolTip="Filter the concerned results by a given Grasshopper group."
                        Visibility="{Binding FilterEntity_GridVisibility}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="5" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <CheckBox
                            VerticalAlignment="Center"
                            Content=""
                            FontFamily="Segoe UI Symbol"
                            IsChecked="{Binding QuantityAggregatorOptions.UseEntityFilter}" />
                        <ComboBox
                            Grid.Column="2"
                            HorizontalAlignment="Stretch"
                            IsEnabled="{Binding QuantityAggregatorOptions.UseEntityFilter}"
                            ItemsSource="{Binding ElementName=MainGrid, Path=DataContext.Gh_Alg.GeometryDefs_PointLineListBundle_View}"
                            SelectedValue="{Binding QuantityAggregatorOptions.EntityToFilter}"
                            Visibility="{Binding QuantityAggregatorOptions.EntityFilter_ComboBoxVisibility}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock>
                                        <Run FontWeight="Bold" Text="{Binding Name, Mode=OneWay}" />
                                        <Run Text=" " />
                                        <Run Foreground="{StaticResource EmsExplanationSolidBrush}" Text="{Binding TypeName, Mode=OneWay}" />
                                    </TextBlock>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </Grid>
                    <CheckBox
                        Grid.Row="1"
                        IsChecked="{Binding QuantityAggregatorOptions.UseTableAbsoluteValues}"
                        SnapsToDevicePixels="True"
                        ToolTip="Use absolute values of the concerned results.">
                        <Border
                            Padding="2,0"
                            BorderBrush="Black"
                            BorderThickness="3,0">
                            <TextBlock Text="X" />
                        </Border>

                    </CheckBox>

                </Grid>

                <Button
                    Grid.Column="6"
                    Width="22"
                    Height="22"
                    Margin="0"
                    Click="{eb:MethodBinding DeleteProblemQuantity}"
                    Content="❌" />
            </Grid>
        </Border>
    </DataTemplate>


    <!--  Template for the values given to the GhLines and GhIntegers that define the Problem Configuration - Here the first column is in Auto and the last is in *  -->
    <DataTemplate x:Key="Overview_ProblemConfig_ItemsControl_ItemTemplateConfigElementValues_ItemTemplate" DataType="{x:Type opt:ProblemConfig_GhLineListConfigValues}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <TextBlock
                Grid.Column="0"
                VerticalAlignment="Center"
                Style="{StaticResource NumberTextBlock}"
                Text="{Binding Element_Name}" />
            <TextBlock
                Grid.Column="2"
                VerticalAlignment="Bottom"
                Style="{StaticResource NumberTextBlock}"
                Text="{Binding Wpf_ConfigValue_Display}" />
        </Grid>
    </DataTemplate>
    <!--  Problem Configuration List Item for the Overview  -->
    <DataTemplate x:Key="Overview_ProblemConfig_ItemsControl_ItemTemplate" DataType="{x:Type opt:ProblemConfig}">
        <Border
            Margin="0,0,0,0"
            Padding="0"
            BorderBrush="{StaticResource EmsFaintBlueSolidBrush}"
            BorderThickness="0,0,0,1"
            Style="{DynamicResource MainItemBorder}">
            <Grid Margin="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="6" />
                    <ColumnDefinition Width="320" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Border
                    Grid.Column="0"
                    Width="30"
                    Height="30"
                    Padding="2"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="{StaticResource EmsFaintBlueSolidBrush}"
                    BorderBrush="{StaticResource EmsLightBlueSolidBrush}"
                    BorderThickness="1">
                    <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Text="{Binding Index}" />
                </Border>

                <ListBox
                    Grid.Column="2"
                    ItemContainerStyle="{StaticResource ListBoxContainerStyle_NoHighlight}"
                    ItemTemplate="{StaticResource Overview_ProblemConfig_ItemsControl_ItemTemplateConfigElementValues_ItemTemplate}"
                    ItemsSource="{Binding Wpf_ElementValues_View}"
                    Style="{StaticResource Borderless_ListBox}" />

                <Border
                    x:Name="termCodeBorder"
                    Grid.Row="0"
                    Grid.Column="3"
                    Padding="5"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Style="{StaticResource Ems_Border_Gray}"
                    ToolTip="{Binding NlOptSolverWrapper.Wpf_TerminationCodeLongDescription}">
                    <TextBlock HorizontalAlignment="Center" Text="{Binding NlOptSolverWrapper.Wpf_TerminationCodeDescription}" />
                </Border>
            </Grid>
        </Border>
        <DataTemplate.Triggers>
            <!--<DataTrigger Binding="{Binding LastPoint.AllConstraintsRespected, FallbackValue={StaticResource False}}" Value="{StaticResource False}">
                <Setter TargetName="constraint_text" Property="TextDecorations" Value="Strikethrough" />
                <Setter TargetName="constraint_border" Property="Style" Value="{StaticResource Ems_Border_Red}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding LastPoint.AllConstraintsRespected, FallbackValue={StaticResource False}}" Value="{StaticResource True}">
                <Setter TargetName="constraint_text" Property="TextDecorations" Value="{x:Null}" />
                <Setter TargetName="constraint_border" Property="Style" Value="{StaticResource Ems_Border_Green}" />
            </DataTrigger>-->
            <!--<DataTrigger Binding="{Binding LastPoint}" Value="{x:Null}">
                <Setter TargetName="constraint_border" Property="Visibility" Value="Hidden" />
            </DataTrigger>
            <DataTrigger Binding="{Binding LastPoint.HasAnyConstraint}" Value="{StaticResource False}">
                <Setter TargetName="constraint_border" Property="Visibility" Value="Hidden" />
            </DataTrigger>-->

            <DataTrigger Binding="{Binding NlOptSolverWrapper.OptimizeTerminationException.OptimizeTerminationCode}" Value="{x:Static opt:NlOpt_OptimizeTerminationCodeEnum.NotStarted}">
                <Setter TargetName="termCodeBorder" Property="Style" Value="{StaticResource Ems_Border_Gray}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding NlOptSolverWrapper.OptimizeTerminationException.OptimizeTerminationCode}" Value="{x:Static opt:NlOpt_OptimizeTerminationCodeEnum.Optimizing}">
                <Setter TargetName="termCodeBorder" Property="Style" Value="{StaticResource Ems_Border_Yellow}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding NlOptSolverWrapper.OptimizeTerminationException.OptimizeTerminationCode}" Value="{x:Static opt:NlOpt_OptimizeTerminationCodeEnum.Forced_Stop}">
                <Setter TargetName="termCodeBorder" Property="Style" Value="{StaticResource Ems_Border_Yellow}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding NlOptSolverWrapper.OptimizeTerminationException.OptimizeTerminationCode}" Value="{x:Static opt:NlOpt_OptimizeTerminationCodeEnum.Success}">
                <Setter TargetName="termCodeBorder" Property="Style" Value="{StaticResource Ems_Border_Green}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding NlOptSolverWrapper.OptimizeTerminationException.OptimizeTerminationCode}" Value="{x:Static opt:NlOpt_OptimizeTerminationCodeEnum.Converged}">
                <Setter TargetName="termCodeBorder" Property="Style" Value="{StaticResource Ems_Border_Green}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding NlOptSolverWrapper.OptimizeTerminationException.OptimizeTerminationCode}" Value="{x:Static opt:NlOpt_OptimizeTerminationCodeEnum.Failed}">
                <Setter TargetName="termCodeBorder" Property="Style" Value="{StaticResource Ems_Border_Red}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <!--  Calculating Overview - Table with the changing information  -->
    <DataTemplate x:Key="Overview_CurrentProblemConfig_LastPoint_InputDetails_ItemsControl_ItemTemplate" DataType="{x:Type opt:Wpf_CalculatingInputDisplay_Data}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20" />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <TextBlock
                Grid.Column="0"
                HorizontalAlignment="Center"
                Style="{StaticResource NumberTextBlock}"
                Text="{Binding Index, Mode=OneWay}" />
            <TextBlock
                Grid.Column="1"
                Style="{StaticResource NumberTextBlock}"
                Text="{Binding Parameter, Mode=OneWay}" />
            <TextBlock
                Grid.Column="2"
                Style="{StaticResource NumberTextBlock}"
                Text="{Binding Last, Mode=OneWay, Converter={StaticResource DefaultNumberConverter}}" />
            <TextBlock
                Grid.Column="3"
                Style="{StaticResource NumberTextBlock}"
                Text="{Binding Calculating, Mode=OneWay, Converter={StaticResource DefaultNumberConverter}}" />
            <TextBlock
                Grid.Column="4"
                Style="{StaticResource NumberTextBlock}"
                Text="{Binding Delta, Mode=OneWay, Converter={StaticResource DefaultNumberConverter}}" />
        </Grid>
    </DataTemplate>

    <!--  Template for the values given to the GhLines and GhIntegers that define the Problem Configuration - Here the columns have fixed length  -->
    <DataTemplate x:Key="Results_ProblemConfig_ItemsControl_ItemTemplateConfigElementValues_ItemTemplate" DataType="{x:Type opt:ProblemConfig_GhLineListConfigValues}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="100" />
            </Grid.ColumnDefinitions>
            <TextBlock
                Grid.Column="0"
                Style="{StaticResource NumberTextBlock}"
                Text="{Binding Element_Name}"
                ToolTip="{Binding Element_Name}" />
            <TextBlock
                Grid.Column="2"
                VerticalAlignment="Bottom"
                Style="{StaticResource NumberTextBlock}"
                Text="{Binding Wpf_ConfigValue_Display}"
                ToolTip="{Binding Wpf_ConfigValue_Display}" />
        </Grid>
    </DataTemplate>
    <!--  Problem Configuration List Item for the Summary page - Constraint Status List  -->
    <DataTemplate x:Key="Results_ConfigSummary_ListBox_ItemTemplate_ConstraintItemSummary_ItemTemplate" DataType="{x:Type opt:NlOpt_Point_ConstraintData}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <ContentControl
                Grid.Column="0"
                Content="{Binding ProbQuantity}"
                ContentTemplate="{StaticResource ProblemQuantity_IndexAndDesignation}" />

            <Border
                x:Name="cte_border"
                Grid.Column="2"
                Padding="8,3"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Center">
                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                    <TextBlock Style="{StaticResource NumberTextBlock}" Text="{Binding EvalValue, Converter={StaticResource DefaultNumberConverter}}" />
                    <TextBlock
                        x:Name="cte_objective"
                        Margin="5,0,0,0"
                        FontSize="14"
                        Style="{StaticResource NumberTextBlock}" />
                    <TextBlock
                        Margin="5,0,0,0"
                        Style="{StaticResource NumberTextBlock}"
                        Text="{Binding ProbQuantity.ConstraintObjective_CompareValue, Converter={StaticResource DefaultNumberConverter}}" />
                </StackPanel>
            </Border>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding ProbQuantity.ConstraintObjective}" Value="{x:Static probQuantity:Quantity_ConstraintObjectiveEnum.EqualTo}">
                <Setter TargetName="cte_objective" Property="Text" Value="=" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ProbQuantity.ConstraintObjective}" Value="{x:Static probQuantity:Quantity_ConstraintObjectiveEnum.HigherThanOrEqual}">
                <Setter TargetName="cte_objective" Property="Text" Value="≥" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ProbQuantity.ConstraintObjective}" Value="{x:Static probQuantity:Quantity_ConstraintObjectiveEnum.LowerThanOrEqual}">
                <Setter TargetName="cte_objective" Property="Text" Value="≤" />
            </DataTrigger>

            <DataTrigger Binding="{Binding IsRespected}" Value="{StaticResource False}">
                <Setter TargetName="cte_border" Property="Style" Value="{StaticResource Ems_Border_Red}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsRespected}" Value="{StaticResource True}">
                <Setter TargetName="cte_border" Property="Style" Value="{StaticResource Ems_Border_Green}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <!--  Problem Configuration List Item for the Summary page  -->
    <DataTemplate x:Key="ResultsSummary_ProblemConfiguration_ItemTemplate" DataType="{x:Type opt:ProblemConfig}">
        <Border
            Margin="0,0,0,0"
            Padding="0"
            BorderBrush="{StaticResource EmsFaintBlueSolidBrush}"
            BorderThickness="0,0,0,1"
            Style="{DynamicResource MainItemBorder}">
            <Grid Margin="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="215" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="80" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="80" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="500" />
                </Grid.ColumnDefinitions>

                <Border
                    Grid.Column="0"
                    Width="30"
                    Height="30"
                    Padding="2"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="{StaticResource EmsFaintBlueSolidBrush}"
                    BorderBrush="{StaticResource EmsLightBlueSolidBrush}"
                    BorderThickness="1">
                    <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Text="{Binding Index}" />
                </Border>

                <ItemsControl
                    Grid.Column="2"
                    VerticalAlignment="Center"
                    ItemTemplate="{StaticResource Results_ProblemConfig_ItemsControl_ItemTemplateConfigElementValues_ItemTemplate}"
                    ItemsSource="{Binding Wpf_ElementValues_View}" />

                <Border
                    x:Name="termCodeBorder"
                    Grid.Row="0"
                    Grid.Column="4"
                    Padding="5"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Style="{StaticResource Ems_Border_Gray}"
                    ToolTip="{Binding NlOptSolverWrapper.Wpf_TerminationCodeLongDescription}">
                    <TextBlock HorizontalAlignment="Center" Text="{Binding NlOptSolverWrapper.Wpf_TerminationCodeDescription}" />
                </Border>

                <TextBlock
                    Grid.Column="6"
                    HorizontalAlignment="Center"
                    Style="{StaticResource NumberTextBlock}"
                    Text="{Binding LastPoint.ObjectiveFunctionEval, Mode=OneWay, FallbackValue='-', Converter={StaticResource DefaultNumberConverter}}">
                    <TextBlock.ToolTip>
                        <TextBlock Text="{Binding TotalPointCount, Mode=OneWay, FallbackValue='', StringFormat=Points: {0}}" />
                    </TextBlock.ToolTip>
                </TextBlock>

                <ItemsControl
                    Grid.Column="8"
                    VerticalAlignment="Center"
                    ItemTemplate="{StaticResource Results_ConfigSummary_ListBox_ItemTemplate_ConstraintItemSummary_ItemTemplate}"
                    ItemsSource="{Binding LastPoint.ConstraintData.Values}" />
            </Grid>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding NlOptSolverWrapper.OptimizeTerminationException.OptimizeTerminationCode}" Value="{x:Static opt:NlOpt_OptimizeTerminationCodeEnum.NotStarted}">
                <Setter TargetName="termCodeBorder" Property="Style" Value="{StaticResource Ems_Border_Gray}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding NlOptSolverWrapper.OptimizeTerminationException.OptimizeTerminationCode}" Value="{x:Static opt:NlOpt_OptimizeTerminationCodeEnum.Optimizing}">
                <Setter TargetName="termCodeBorder" Property="Style" Value="{StaticResource Ems_Border_Yellow}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding NlOptSolverWrapper.OptimizeTerminationException.OptimizeTerminationCode}" Value="{x:Static opt:NlOpt_OptimizeTerminationCodeEnum.Forced_Stop}">
                <Setter TargetName="termCodeBorder" Property="Style" Value="{StaticResource Ems_Border_Yellow}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding NlOptSolverWrapper.OptimizeTerminationException.OptimizeTerminationCode}" Value="{x:Static opt:NlOpt_OptimizeTerminationCodeEnum.Success}">
                <Setter TargetName="termCodeBorder" Property="Style" Value="{StaticResource Ems_Border_Green}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding NlOptSolverWrapper.OptimizeTerminationException.OptimizeTerminationCode}" Value="{x:Static opt:NlOpt_OptimizeTerminationCodeEnum.Converged}">
                <Setter TargetName="termCodeBorder" Property="Style" Value="{StaticResource Ems_Border_Green}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding NlOptSolverWrapper.OptimizeTerminationException.OptimizeTerminationCode}" Value="{x:Static opt:NlOpt_OptimizeTerminationCodeEnum.Failed}">
                <Setter TargetName="termCodeBorder" Property="Style" Value="{StaticResource Ems_Border_Red}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="ProblemConfiguration_Summary_ItemTemplate" DataType="{x:Type opt:ProblemConfig}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="215" />
            </Grid.ColumnDefinitions>
            <Border
                Grid.Column="0"
                Width="30"
                Height="30"
                Padding="2"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Background="{StaticResource EmsFaintBlueSolidBrush}"
                BorderBrush="{StaticResource EmsLightBlueSolidBrush}"
                BorderThickness="1">
                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="{Binding Index}" />
            </Border>

            <ItemsControl
                Grid.Column="2"
                VerticalAlignment="Center"
                ItemTemplate="{StaticResource Results_ProblemConfig_ItemsControl_ItemTemplateConfigElementValues_ItemTemplate}"
                ItemsSource="{Binding Wpf_ElementValues_View}" />
        </Grid>
    </DataTemplate>

    <!--  Problem Config - Plot Selection Lists - They depend on the type  -->
    <wpfHelpers:ProblemConfig_ChartSelector_Template x:Key="ProblemConfig_ChartSelector_Template" />
    <DataTemplate x:Key="ProblemConfig_ChartSelector_Double_Input_ParamDef" DataType="{x:Type opt:ChartDisplayData}">
        <!--  The RelatedQuantity is Double_Input_ParamDef  -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TextBlock
                Grid.Column="0"
                VerticalAlignment="Center"
                Text="{Binding RelatedQuantity.Name, Mode=OneWay}" />
            <CheckBox
                Grid.Column="2"
                VerticalAlignment="Center"
                IsChecked="{Binding SeriesData[0].IsPairSelected_AxisOnLeftSide}" />
            <CheckBox
                Grid.Column="4"
                VerticalAlignment="Center"
                IsChecked="{Binding SeriesData[0].IsPairSelected_AxisOnRightSide}" />
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="ProblemConfig_ChartSelector_Point_Input_ParamDef" DataType="{x:Type opt:ChartDisplayData}">
        <!--  The RelatedQuantity is Point_Input_ParamDef  -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <CheckBox
                Grid.Row="0"
                Grid.Column="2"
                VerticalAlignment="Center"
                IsChecked="{Binding SeriesData[0].IsPairSelected_AxisOnLeftSide}" />
            <CheckBox
                Grid.Row="0"
                Grid.Column="4"
                VerticalAlignment="Center"
                Content="{Binding SeriesData[0].Designation, Mode=OneWay}"
                IsChecked="{Binding SeriesData[0].IsPairSelected_AxisOnRightSide}" />

            <TextBlock
                Grid.Row="1"
                Grid.Column="0"
                VerticalAlignment="Center"
                Text="{Binding RelatedQuantity.Name, Mode=OneWay}" />
            <CheckBox
                Grid.Row="1"
                Grid.Column="2"
                VerticalAlignment="Center"
                IsChecked="{Binding SeriesData[1].IsPairSelected_AxisOnLeftSide}" />
            <CheckBox
                Grid.Row="1"
                Grid.Column="4"
                VerticalAlignment="Center"
                Content="{Binding SeriesData[1].Designation, Mode=OneWay}"
                IsChecked="{Binding SeriesData[1].IsPairSelected_AxisOnRightSide}" />

            <CheckBox
                Grid.Row="1"
                Grid.Column="4"
                VerticalAlignment="Center"
                IsChecked="{Binding SeriesData[2].IsPairSelected_AxisOnLeftSide}" />
            <CheckBox
                Grid.Row="1"
                Grid.Column="4"
                VerticalAlignment="Center"
                Content="{Binding SeriesData[2].Designation, Mode=OneWay}"
                IsChecked="{Binding SeriesData[2].IsPairSelected_AxisOnRightSide}" />
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="ProblemConfig_ChartSelector_ProblemQuantity" DataType="{x:Type opt:ChartDisplayData}">
        <!--  The RelatedQuantity is ProblemQuantity  -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <ContentControl
                Grid.Column="0"
                VerticalAlignment="Center"
                Content="{Binding RelatedQuantity}"
                ContentTemplate="{StaticResource ProblemQuantity_IndexDesignationAndDetails}" />
            <CheckBox
                Grid.Column="2"
                VerticalAlignment="Center"
                IsChecked="{Binding SeriesData[0].IsPairSelected_AxisOnLeftSide}" />
            <CheckBox
                Grid.Column="4"
                VerticalAlignment="Center"
                IsChecked="{Binding SeriesData[0].IsPairSelected_AxisOnRightSide}" />
        </Grid>
    </DataTemplate>


    <!--  NlOptPoint INPUTS - Template Selector to decide based on the KVP if use the point or the double  -->
    <wpfHelpers:NlOpt_Point_GhInputNL_InputType_TemplateSelector_ForGrid x:Key="NlOpt_Point_GhInputNL_InputType_TemplateSelector_ForGrid" />
    <!-- NlOptPoint = Non-Linear Inputs - Target Type is KVP<Input_ParamDefBase, Point3d> -->
    <DataTemplate x:Key="NlOpt_Point_GhInputNL_InputTypePoint_ForGrid">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <TextBlock
                Grid.Column="0"
                HorizontalAlignment="Right"
                Style="{StaticResource NumberTextBlock}">
                <Run Foreground="{StaticResource EmsPanelBorder_Gray}" Text="X:" />
                <Run Text="{Binding Value.X, Converter={StaticResource DefaultNumberConverter}}" />
            </TextBlock>

            <TextBlock
                Grid.Column="0"
                HorizontalAlignment="Right"
                Style="{StaticResource NumberTextBlock}">
                <Run Foreground="{StaticResource EmsPanelBorder_Gray}" Text="Y:" />
                <Run Text="{Binding Value.Y, Converter={StaticResource DefaultNumberConverter}}" />
            </TextBlock>

            <TextBlock
                Grid.Column="0"
                HorizontalAlignment="Right"
                Style="{StaticResource NumberTextBlock}">
                <Run Foreground="{StaticResource EmsPanelBorder_Gray}" Text="Z:" />
                <Run Text="{Binding Value.Z, Converter={StaticResource DefaultNumberConverter}}" />
            </TextBlock>
        </Grid>
    </DataTemplate>
    <!-- NlOptPoint = Non-Linear Inputs - Target Type is KVP<Input_ParamDefBase, double> -->
    <DataTemplate x:Key="NlOpt_Point_GhInputNL_InputTypeDouble_ForGrid">
        <TextBlock Style="{StaticResource NumberTextBlock}" Text="{Binding Value, Converter={StaticResource DefaultNumberConverter}}" />
    </DataTemplate>

    <!--  NlOptPoint INPUTS - ListView with Grid: Used as a ContentTemplate Bound to the Input Dictionary  -->
    <DataTemplate x:Key="NlOptPoint_Inputs_Grid">
        <ListView
            HorizontalContentAlignment="Center"
            BorderThickness="0"
            ItemsSource="{Binding}">
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{x:Null}" />
                            <Setter Property="BorderBrush" Value="{x:Null}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{x:Null}" />
                            <Setter Property="BorderBrush" Value="{x:Null}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.Resources>
                <Style TargetType="GridViewColumnHeader">
                    <Setter Property="Visibility" Value="Collapsed" />
                </Style>
            </ListView.Resources>
            <ListView.View>
                <GridView>
                    <GridView.Columns>
                        <GridViewColumn Width="150">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Style="{StaticResource NumberTextBlock}" Text="{Binding Key.Name}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Width="150" CellTemplateSelector="{StaticResource NlOpt_Point_GhInputNL_InputType_TemplateSelector_ForGrid}" />
                    </GridView.Columns>
                </GridView>
            </ListView.View>
        </ListView>
    </DataTemplate>

    <!--  NlOptPoint INPUTS - Template Selector to decide based on the KVP if use the point or the double  -->
    <wpfHelpers:NlOpt_Point_GhInputNL_InputType_TemplateSelector x:Key="NlOpt_Point_GhInputNL_InputType_TemplateSelector" />
    <!-- NlOptPoint = Non-Linear Inputs - Target Type is KVP<Input_ParamDefBase, Point3d> -->
    <DataTemplate x:Key="NlOpt_Point_GhInputNL_InputTypePoint">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <TextBlock
                Grid.Row="0"
                Grid.Column="0"
                HorizontalAlignment="Right"
                Style="{StaticResource NumberTextBlock}"
                Text="- X" />
            <TextBlock
                Grid.Row="0"
                Grid.Column="2"
                Style="{StaticResource NumberTextBlock}"
                Text="{Binding Value.X, Converter={StaticResource DefaultNumberConverter}}" />

            <TextBlock
                Grid.Row="1"
                Grid.Column="0"
                HorizontalAlignment="Right"
                Style="{StaticResource NumberTextBlock}">
                <Run Text="{Binding Key.Name}" />
                <Run Text=" - Y" />
            </TextBlock>
            <TextBlock
                Grid.Row="1"
                Grid.Column="2"
                Style="{StaticResource NumberTextBlock}"
                Text="{Binding Value.Y, Converter={StaticResource DefaultNumberConverter}}" />

            <TextBlock
                Grid.Row="2"
                Grid.Column="0"
                HorizontalAlignment="Right"
                Style="{StaticResource NumberTextBlock}"
                Text="- Z" />
            <TextBlock
                Grid.Row="2"
                Grid.Column="2"
                Style="{StaticResource NumberTextBlock}"
                Text="{Binding Value.Z, Converter={StaticResource DefaultNumberConverter}}" />
        </Grid>
    </DataTemplate>
    <!-- NlOptPoint = Non-Linear Inputs - Target Type is KVP<Input_ParamDefBase, double> -->
    <DataTemplate x:Key="NlOpt_Point_GhInputNL_InputTypeDouble">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <TextBlock
                Grid.Row="0"
                Grid.Column="0"
                HorizontalAlignment="Right"
                Style="{StaticResource NumberTextBlock}">
                <Run Text="{Binding Key.Name}" />
            </TextBlock>
            <TextBlock
                Grid.Row="0"
                Grid.Column="2"
                Style="{StaticResource NumberTextBlock}"
                Text="{Binding Value, Converter={StaticResource DefaultNumberConverter}}" />
        </Grid>
    </DataTemplate>


    <!--  NlOptPoint = Detailed *Quantity* Output Considers All Types  -->
    <DataTemplate x:Key="Point_OutputData_Detailed" DataType="{x:Type probQuantity:NlOpt_Point_ProblemQuantity_Output}">
        <Border x:Name="main_border" Margin="0,3,3,3">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="130" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="90" />
                </Grid.ColumnDefinitions>

                <ContentControl
                    Grid.Column="0"
                    Margin="5,5,0,5"
                    VerticalAlignment="Center"
                    Content="{Binding Quantity}"
                    ContentTemplate="{StaticResource ProblemQuantity_IndexAndDesignation}" />

                <StackPanel
                    Grid.Column="2"
                    VerticalAlignment="Center"
                    Orientation="Vertical">
                    <TextBlock
                        x:Name="constObjective"
                        HorizontalAlignment="Center"
                        Style="{StaticResource NumberTextBlock}">
                        <Run Text="c(x)" />
                        <Run Text="{Binding Quantity.WpfSummaryFunctionObjective_ConstraintObjective_DisplayOnly, Mode=OneWay}" />
                        <Run Text="{Binding Quantity.ConstraintObjective_CompareValue, Mode=OneWay, Converter={StaticResource DefaultNumberConverter}}" />
                    </TextBlock>

                    <StackPanel
                        x:Name="funcObjective"
                        HorizontalAlignment="Center"
                        Orientation="Horizontal">
                        <TextBlock
                            VerticalAlignment="Center"
                            Style="{StaticResource NumberTextBlock}"
                            Text="f(x)" />
                        <TextBlock
                            VerticalAlignment="Center"
                            FontSize="18"
                            RenderTransformOrigin="0.5,0.5"
                            Text="{Binding Quantity.WpfSummaryFunctionObjective_DisplayOnly.Item1}"
                            ToolTip="{Binding Quantity.WpfSummaryFunctionObjective_DisplayOnly.Item3}">
                            <TextBlock.RenderTransform>
                                <RotateTransform Angle="{Binding Quantity.WpfSummaryFunctionObjective_DisplayOnly.Item2}" />
                            </TextBlock.RenderTransform>
                        </TextBlock>
                        <TextBlock
                            Style="{StaticResource NumberTextBlock}"
                            Text="{Binding Quantity.FunctionObjective_TargetValue, Mode=OneWay, Converter={StaticResource DefaultNumberConverter}}"
                            Visibility="{Binding Quantity.WpfSummaryFunctionObjective_FunctionObjective_TargetValue_TextBlockVisibility, Mode=OneWay}" />
                    </StackPanel>

                    <TextBlock
                        HorizontalAlignment="Center"
                        Style="{StaticResource NumberTextBlock}"
                        Text="{Binding Quantity.QuantityAggregatorOptions.WpfTextDescription, Mode=OneWay}"
                        ToolTip="{Binding Quantity.QuantityAggregatorOptions.Wpf_SummaryToolTip, Mode=OneWay}" />
                </StackPanel>


                <TextBlock
                    x:Name="val_textbox"
                    Grid.Column="4"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Style="{StaticResource NumberTextBlock}"
                    Text="{Binding AggregatedValue, Mode=OneWay, Converter={StaticResource DefaultNumberConverter}}" />

            </Grid>
        </Border>
        <DataTemplate.Triggers>
            <!--  Outer Border  -->
            <DataTrigger Binding="{Binding Quantity.IsConstraint}" Value="{StaticResource True}">
                <Setter TargetName="main_border" Property="Style" Value="{StaticResource Ems_Border_Yellow}" />
                <Setter TargetName="constObjective" Property="Visibility" Value="Visible" />
                <Setter TargetName="funcObjective" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Quantity.IsOutputOnly}" Value="{StaticResource True}">
                <Setter TargetName="main_border" Property="Style" Value="{StaticResource Ems_Border_Gray}" />
                <Setter TargetName="constObjective" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="funcObjective" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Quantity.IsObjectiveFunctionMinimize}" Value="{StaticResource True}">
                <Setter TargetName="main_border" Property="Style" Value="{StaticResource Ems_Border_Green}" />
                <Setter TargetName="constObjective" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="funcObjective" Property="Visibility" Value="Visible" />
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Quantity.IsConstraint}" Value="{StaticResource True}" />
                    <Condition Binding="{Binding ConstraintIsRespected}" Value="{StaticResource False}" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="val_textbox" Property="Foreground" Value="{StaticResource EmsPanelBorder_Red}" />
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <!--  NlOptPoint = Detailed *Quantity* Output Considers All Types WITH SELECTION BUTTON !!!!  -->
    <DataTemplate x:Key="Point_OutputData_Detailed_WithSelectionButton" DataType="{x:Type probQuantity:NlOpt_Point_ProblemQuantity_Output}">
        <Border
            x:Name="main_border"
            Margin="0,3,3,3"
            MouseLeftButtonUp="{eb:MethodBinding {Binding Quantity},
                                                 Wpf_ClickedOver_SetDisplayAggregatorFilters}">
            <Grid IsHitTestVisible="False">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="80" />
                </Grid.ColumnDefinitions>

                <ContentControl
                    Grid.Column="0"
                    Margin="5,5,0,5"
                    VerticalAlignment="Center"
                    Content="{Binding Quantity}"
                    ContentTemplate="{StaticResource ProblemQuantity_IndexAndDesignation}"
                    IsHitTestVisible="False" />

                <StackPanel
                    Grid.Column="2"
                    VerticalAlignment="Center"
                    IsHitTestVisible="False"
                    Orientation="Vertical">
                    <TextBlock
                        x:Name="constObjective"
                        HorizontalAlignment="Center"
                        IsHitTestVisible="False"
                        Style="{StaticResource NumberTextBlock}">
                        <Run Text="c(x)" />
                        <Run Text="{Binding Quantity.WpfSummaryFunctionObjective_ConstraintObjective_DisplayOnly, Mode=OneWay}" />
                        <Run Text="{Binding Quantity.ConstraintObjective_CompareValue, Mode=OneWay, Converter={StaticResource DefaultNumberConverter}}" />
                    </TextBlock>

                    <StackPanel
                        x:Name="funcObjective"
                        HorizontalAlignment="Center"
                        IsHitTestVisible="False"
                        Orientation="Horizontal">
                        <TextBlock
                            VerticalAlignment="Center"
                            IsHitTestVisible="False"
                            Style="{StaticResource NumberTextBlock}"
                            Text="f(x)" />
                        <TextBlock
                            VerticalAlignment="Center"
                            FontSize="18"
                            IsHitTestVisible="False"
                            RenderTransformOrigin="0.5,0.5"
                            Text="{Binding Quantity.WpfSummaryFunctionObjective_DisplayOnly.Item1}"
                            ToolTip="{Binding Quantity.WpfSummaryFunctionObjective_DisplayOnly.Item3}">
                            <TextBlock.RenderTransform>
                                <RotateTransform Angle="{Binding Quantity.WpfSummaryFunctionObjective_DisplayOnly.Item2}" />
                            </TextBlock.RenderTransform>
                        </TextBlock>
                        <TextBlock
                            IsHitTestVisible="False"
                            Style="{StaticResource NumberTextBlock}"
                            Text="{Binding Quantity.FunctionObjective_TargetValue, Mode=OneWay, Converter={StaticResource DefaultNumberConverter}}"
                            Visibility="{Binding Quantity.WpfSummaryFunctionObjective_FunctionObjective_TargetValue_TextBlockVisibility, Mode=OneWay}" />
                    </StackPanel>

                    <TextBlock
                        HorizontalAlignment="Center"
                        IsHitTestVisible="False"
                        Style="{StaticResource NumberTextBlock}"
                        Text="{Binding Quantity.QuantityAggregatorOptions.WpfTextDescription, Mode=OneWay}"
                        ToolTip="{Binding Quantity.QuantityAggregatorOptions.Wpf_SummaryToolTip, Mode=OneWay}" />
                </StackPanel>


                <TextBlock
                    x:Name="val_textbox"
                    Grid.Column="4"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    IsHitTestVisible="False"
                    Style="{StaticResource NumberTextBlock}"
                    Text="{Binding AggregatedValue, Mode=OneWay, Converter={StaticResource DefaultNumberConverter}}" />

            </Grid>
        </Border>
        <DataTemplate.Triggers>
            <!--  Is this using the selected problem quantity?  -->
            <DataTrigger Binding="{Binding Wpf_UsesSelected_IProblemQuantitySource}" Value="{StaticResource False}">
                <Setter TargetName="main_border" Property="Opacity" Value="0.5" />
            </DataTrigger>

            <!--  Outer Border  -->
            <DataTrigger Binding="{Binding Quantity.IsConstraint}" Value="{StaticResource True}">
                <Setter TargetName="main_border" Property="Style" Value="{StaticResource Ems_Border_Yellow}" />
                <Setter TargetName="constObjective" Property="Visibility" Value="Visible" />
                <Setter TargetName="funcObjective" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Quantity.IsOutputOnly}" Value="{StaticResource True}">
                <Setter TargetName="main_border" Property="Style" Value="{StaticResource Ems_Border_Gray}" />
                <Setter TargetName="constObjective" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="funcObjective" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Quantity.IsObjectiveFunctionMinimize}" Value="{StaticResource True}">
                <Setter TargetName="main_border" Property="Style" Value="{StaticResource Ems_Border_Green}" />
                <Setter TargetName="constObjective" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="funcObjective" Property="Visibility" Value="Visible" />
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Quantity.IsConstraint}" Value="{StaticResource True}" />
                    <Condition Binding="{Binding ConstraintIsRespected}" Value="{StaticResource False}" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="val_textbox" Property="Foreground" Value="{StaticResource EmsPanelBorder_Red}" />
            </MultiDataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!--  NlOptPoint = Summary for the points with Number, Input and Eval  -->
    <DataTemplate x:Key="Point_OutputDataForList" DataType="{x:Type opt:NlOpt_Point}">
        <Grid HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border
                Grid.RowSpan="3"
                Grid.Column="0"
                Width="30"
                Height="30"
                Padding="2"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Background="{StaticResource EmsFaintBlueSolidBrush}"
                BorderBrush="{StaticResource EmsLightBlueSolidBrush}"
                BorderThickness="1"
                ToolTip="Solution Point">
                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="{Binding PointIndex}" />
            </Border>


            <TextBlock
                Grid.Column="2"
                HorizontalAlignment="Center"
                Style="{StaticResource NumberTextBlock}"
                Text="{Binding ObjectiveFunctionEval, Mode=OneWay, FallbackValue='-', Converter={StaticResource DefaultNumberConverter}}"
                ToolTip="Solution Point" />

            <Border
                x:Name="constraint_border"
                Grid.Column="4"
                Padding="5"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                ToolTip="{Binding Wpf_ConstraintTextReport}">
                <TextBlock x:Name="constraint_text" Text="Constraint" />
            </Border>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding AllConstraintsRespected, FallbackValue={StaticResource False}}" Value="{StaticResource False}">
                <Setter TargetName="constraint_text" Property="TextDecorations" Value="Strikethrough" />
                <Setter TargetName="constraint_border" Property="Style" Value="{StaticResource Ems_Border_Red}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding AllConstraintsRespected, FallbackValue={StaticResource False}}" Value="{StaticResource True}">
                <Setter TargetName="constraint_text" Property="TextDecorations" Value="{x:Null}" />
                <Setter TargetName="constraint_border" Property="Style" Value="{StaticResource Ems_Border_Green}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style x:Key="WpfPointDisplayDataGrid_SelectedDataHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Padding" Value="3,0" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="{StaticResource EmsDarkBlueSolidBrush}" />
    </Style>

    <DataTemplate x:Key="PointLoad_ListBox_ItemTemplate" DataType="{x:Type fea_loads:FeLoad_Point}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="25" />
            </Grid.ColumnDefinitions>
            <ContentControl
                Grid.Column="0"
                Content="{Binding GhGeom}"
                ContentTemplate="{StaticResource Gh_GeometryNameAndType}" />
            <Grid Grid.Column="1" VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0" Style="{StaticResource NumberTextBlock}">
                    <Run Text="X:" />
                    <Run Text="{Binding Nominal.X, Converter={StaticResource DefaultNumberConverter}}" />
                </TextBlock>
                <TextBlock Grid.Column="2" Style="{StaticResource NumberTextBlock}">
                    <Run Text="Y:" />
                    <Run Text="{Binding Nominal.Y, Converter={StaticResource DefaultNumberConverter}}" />
                </TextBlock>
                <TextBlock Grid.Column="4" Style="{StaticResource NumberTextBlock}">
                    <Run Text="Z:" />
                    <Run Text="{Binding Nominal.Z, Converter={StaticResource DefaultNumberConverter}}" />
                </TextBlock>
            </Grid>
            <TextBlock
                Grid.Column="2"
                Style="{StaticResource NumberTextBlock}"
                Text="{Binding Multiplier, Converter={StaticResource DefaultNumberConverter}}" />
            <Button
                Grid.Column="3"
                Height="25"
                VerticalAlignment="Center"
                Click="{eb:MethodBinding {Binding},
                                         WpfCommand_Delete}"
                Content="X" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ProblemQuantityAggregator_ReadOnly_Template" DataType="{x:Type probQuantity:ProblemQuantityAggregator}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TextBlock
                Grid.Row="0"
                Grid.RowSpan="2"
                Grid.Column="0"
                Margin="5,0"
                VerticalAlignment="Center"
                Text="{Binding Wpf_AggregateTypeName}" />
            <StackPanel
                Grid.Row="0"
                Grid.Column="1"
                Orientation="Horizontal">
                <CheckBox
                    Margin="0,0,5,0"
                    Content="Filter"
                    IsChecked="{Binding UseEntityFilter}"
                    IsEnabled="False" />
                <ContentControl
                    x:Name="entityToFilter"
                    Content="{Binding EntityToFilter}"
                    ContentTemplate="{StaticResource Gh_GeometryNameAndType}" />
            </StackPanel>
            <CheckBox
                Grid.Row="1"
                Grid.Column="1"
                Content="Absolute"
                IsChecked="{Binding UseTableAbsoluteValues}"
                IsEnabled="False" />
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding UseEntityFilter}" Value="{StaticResource False}">
                <Setter TargetName="entityToFilter" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate x:Key="PointObjectiveFunctionValues_ToolTip">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <ContentControl
                Grid.Row="0"
                Content="{Binding Quantity}"
                ContentTemplate="{StaticResource ProblemQuantity_IndexAndDesignation}" />
            <ContentControl
                Grid.Row="1"
                Content="{Binding Quantity.QuantityAggregatorOptions}"
                ContentTemplate="{StaticResource ProblemQuantityAggregator_ReadOnly_Template}" />
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="PointInputWithSlider_List_ItemTemplate" DataType="{x:Type opt:PointNlParameterInputData}">
        <Grid HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Text="{Binding ParameterName}" />
            <Grid
                Grid.Column="1"
                VerticalAlignment="Center"
                ToolTip="{Binding ToolTipValue}">
                <Slider
                    Margin="10,0"
                    VerticalAlignment="Center"
                    IsEnabled="False"
                    Maximum="{Binding MaxLimit}"
                    Minimum="{Binding MinLimit}"
                    Value="{Binding Value}" />
                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Style="{StaticResource NumberTextBlock}"
                    Text="{Binding Value, Converter={StaticResource DefaultNumberConverter}}" />
            </Grid>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="PointObjectiveFunctionValues_List_ItemTemplate" DataType="{x:Type probQuantity:NlOpt_Point_ProblemQuantity_Output}">
        <Grid>
            <Grid.ToolTip>
                <ContentControl Content="{Binding}" ContentTemplate="{StaticResource PointObjectiveFunctionValues_ToolTip}" />
            </Grid.ToolTip>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <TextBlock
                Grid.Column="0"
                Style="{StaticResource NumberTextBlock}"
                Text="{Binding Quantity.InternalId, StringFormat={}{0}\=}" />
            <TextBlock
                Grid.Column="2"
                Style="{StaticResource NumberTextBlock}"
                Text="{Binding AggregatedValue, Converter={StaticResource DefaultNumberConverter}}" />
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="PointConstraintValues_List_ItemTemplate" DataType="{x:Type probQuantity:NlOpt_Point_ProblemQuantity_Output}">
        <Grid>
            <Grid.ToolTip>
                <ContentControl Content="{Binding}" ContentTemplate="{StaticResource PointObjectiveFunctionValues_ToolTip}" />
            </Grid.ToolTip>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <TextBlock
                x:Name="tb_id"
                Grid.Column="0"
                Foreground="{StaticResource EmsPanelBorder_Green}"
                Style="{StaticResource NumberTextBlock}"
                Text="{Binding Quantity.InternalId, StringFormat={}{0}\=}" />
            <TextBlock
                x:Name="tb_val"
                Grid.Column="2"
                Foreground="{StaticResource EmsPanelBorder_Green}"
                Style="{StaticResource NumberTextBlock}"
                Text="{Binding AggregatedValue, Converter={StaticResource DefaultNumberConverter}}" />
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding ConstraintIsRespected, FallbackValue={StaticResource False}}" Value="{StaticResource False}">
                <Setter TargetName="tb_id" Property="Foreground" Value="{StaticResource EmsPanelBorder_Red}" />
                <Setter TargetName="tb_id" Property="FontWeight" Value="Bold" />
                <Setter TargetName="tb_val" Property="Foreground" Value="{StaticResource EmsPanelBorder_Red}" />
                <Setter TargetName="tb_val" Property="FontWeight" Value="Bold" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <DataTemplate x:Key="CalculatingScreen_CalculatedPointList_List_ItemTemplate" DataType="{x:Type opt:NlOpt_Point}">
        <Grid HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="100" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="100" />
            </Grid.ColumnDefinitions>
            <Border
                Grid.Row="0"
                Grid.Column="0"
                Width="30"
                Height="30"
                Padding="2"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Background="{StaticResource EmsFaintBlueSolidBrush}"
                BorderBrush="{StaticResource EmsLightBlueSolidBrush}"
                BorderThickness="1"
                ToolTip="Solution Point">
                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="{Binding PointIndex}" />
            </Border>

            <ItemsControl
                Grid.Row="0"
                Grid.Column="2"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Center"
                ItemTemplate="{StaticResource PointInputWithSlider_List_ItemTemplate}"
                ItemsSource="{Binding InputDataAsList}"
                ScrollViewer.VerticalScrollBarVisibility="Disabled"
                Style="{StaticResource VirtualItemsControl}" />

            <Border
                Grid.Row="0"
                Grid.Column="4"
                Padding="5,2"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Center"
                Style="{StaticResource Ems_Border_Green}">
                <ItemsControl
                    ItemTemplate="{StaticResource PointObjectiveFunctionValues_List_ItemTemplate}"
                    ItemsSource="{Binding Wpf_ProblemQuantityOutputs_ObjectiveFunction}"
                    ScrollViewer.VerticalScrollBarVisibility="Disabled"
                    Style="{StaticResource VirtualItemsControl}" />
            </Border>

            <Border
                Grid.Row="0"
                Grid.Column="6"
                Padding="5,2"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Center"
                Style="{StaticResource Ems_Border_Yellow}">
                <ItemsControl
                    ItemTemplate="{StaticResource PointConstraintValues_List_ItemTemplate}"
                    ItemsSource="{Binding Wpf_ProblemQuantityOutputs_Constraints}"
                    ScrollViewer.VerticalScrollBarVisibility="Disabled"
                    Style="{StaticResource VirtualItemsControl}" />
            </Border>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ResultsSummary_ProblemConfiguration_ComboBox_ItemTemplate" DataType="{x:Type opt:ProblemConfig}">
        <Border
            Margin="0,0,0,0"
            Padding="0"
            HorizontalAlignment="Stretch"
            BorderBrush="{StaticResource EmsFaintBlueSolidBrush}"
            BorderThickness="0,0,0,1"
            Style="{DynamicResource MainItemBorder}">
            <Grid Margin="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="215" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Border
                    Grid.Column="0"
                    Width="30"
                    Height="30"
                    Padding="2"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="{StaticResource EmsFaintBlueSolidBrush}"
                    BorderBrush="{StaticResource EmsLightBlueSolidBrush}"
                    BorderThickness="1">
                    <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Text="{Binding Index}" />
                </Border>

                <ItemsControl
                    Grid.Column="2"
                    VerticalAlignment="Center"
                    ItemTemplate="{StaticResource Results_ProblemConfig_ItemsControl_ItemTemplateConfigElementValues_ItemTemplate}"
                    ItemsSource="{Binding Wpf_ElementValues_View}" />

                <Border
                    x:Name="termCodeBorder"
                    Grid.Row="0"
                    Grid.Column="4"
                    Padding="5"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Style="{StaticResource Ems_Border_Gray}"
                    ToolTip="{Binding NlOptSolverWrapper.Wpf_TerminationCodeLongDescription}">
                    <TextBlock HorizontalAlignment="Center" Text="{Binding NlOptSolverWrapper.Wpf_TerminationCodeDescription}" />
                </Border>
            </Grid>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding NlOptSolverWrapper.OptimizeTerminationException.OptimizeTerminationCode}" Value="{x:Static opt:NlOpt_OptimizeTerminationCodeEnum.NotStarted}">
                <Setter TargetName="termCodeBorder" Property="Style" Value="{StaticResource Ems_Border_Gray}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding NlOptSolverWrapper.OptimizeTerminationException.OptimizeTerminationCode}" Value="{x:Static opt:NlOpt_OptimizeTerminationCodeEnum.Optimizing}">
                <Setter TargetName="termCodeBorder" Property="Style" Value="{StaticResource Ems_Border_Yellow}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding NlOptSolverWrapper.OptimizeTerminationException.OptimizeTerminationCode}" Value="{x:Static opt:NlOpt_OptimizeTerminationCodeEnum.Forced_Stop}">
                <Setter TargetName="termCodeBorder" Property="Style" Value="{StaticResource Ems_Border_Yellow}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding NlOptSolverWrapper.OptimizeTerminationException.OptimizeTerminationCode}" Value="{x:Static opt:NlOpt_OptimizeTerminationCodeEnum.Success}">
                <Setter TargetName="termCodeBorder" Property="Style" Value="{StaticResource Ems_Border_Green}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding NlOptSolverWrapper.OptimizeTerminationException.OptimizeTerminationCode}" Value="{x:Static opt:NlOpt_OptimizeTerminationCodeEnum.Converged}">
                <Setter TargetName="termCodeBorder" Property="Style" Value="{StaticResource Ems_Border_Green}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding NlOptSolverWrapper.OptimizeTerminationException.OptimizeTerminationCode}" Value="{x:Static opt:NlOpt_OptimizeTerminationCodeEnum.Failed}">
                <Setter TargetName="termCodeBorder" Property="Style" Value="{StaticResource Ems_Border_Red}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>


    <DataTemplate x:Key="ProblemConfiguration_Management_ItemTemplate" DataType="{x:Type opt:ProblemConfig}">
        <Border
            Margin="0,0,0,0"
            Padding="0"
            BorderBrush="{StaticResource EmsFaintBlueSolidBrush}"
            BorderThickness="0,0,0,1"
            Style="{DynamicResource MainItemBorder}">
            <Grid Margin="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="215" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="80" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Border
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="0"
                    Width="30"
                    Height="30"
                    Padding="2"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="{StaticResource EmsFaintBlueSolidBrush}"
                    BorderBrush="{StaticResource EmsLightBlueSolidBrush}"
                    BorderThickness="1">
                    <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Text="{Binding Index}" />
                </Border>

                <ItemsControl
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="2"
                    VerticalAlignment="Center"
                    ItemTemplate="{StaticResource Results_ProblemConfig_ItemsControl_ItemTemplateConfigElementValues_ItemTemplate}"
                    ItemsSource="{Binding Wpf_ElementValues_View}" />
                <Border
                    x:Name="termCodeBorder"
                    Grid.Row="0"
                    Grid.Column="4"
                    Padding="5"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                    Style="{StaticResource Ems_Border_Gray}"
                    ToolTip="{Binding NlOptSolverWrapper.Wpf_TerminationCodeLongDescription}">
                    <TextBlock HorizontalAlignment="Center" Text="{Binding NlOptSolverWrapper.Wpf_TerminationCodeDescription}" />
                </Border>

                <Grid
                    Grid.Row="1"
                    Grid.Column="4"
                    Margin="0,5,0,0"
                    VerticalAlignment="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Button
                        Grid.Column="1"
                        Width="22"
                        Height="22"
                        Margin="0"
                        Click="{eb:MethodBinding {Binding},
                                                 WpfCommand_ClearOptimizationData}"
                        ToolTip="Clear Optimization Results.">
                        <Button.Content>
                            <TextBlock FontFamily="Segoe UI Symbol" Text="" />
                        </Button.Content>
                    </Button>
                    <Button
                        Grid.Column="3"
                        Width="22"
                        Height="22"
                        Margin="0"
                        Click="{eb:MethodBinding {Binding},
                                                 WpfCommand_DeleteProblemConfiguration}"
                        Content="❌"
                        ToolTip="Delete Problem Configuration and Optimization Results." />
                </Grid>
            </Grid>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding NlOptSolverWrapper.OptimizeTerminationException.OptimizeTerminationCode}" Value="{x:Static opt:NlOpt_OptimizeTerminationCodeEnum.NotStarted}">
                <Setter TargetName="termCodeBorder" Property="Style" Value="{StaticResource Ems_Border_Gray}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding NlOptSolverWrapper.OptimizeTerminationException.OptimizeTerminationCode}" Value="{x:Static opt:NlOpt_OptimizeTerminationCodeEnum.Optimizing}">
                <Setter TargetName="termCodeBorder" Property="Style" Value="{StaticResource Ems_Border_Yellow}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding NlOptSolverWrapper.OptimizeTerminationException.OptimizeTerminationCode}" Value="{x:Static opt:NlOpt_OptimizeTerminationCodeEnum.Forced_Stop}">
                <Setter TargetName="termCodeBorder" Property="Style" Value="{StaticResource Ems_Border_Yellow}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding NlOptSolverWrapper.OptimizeTerminationException.OptimizeTerminationCode}" Value="{x:Static opt:NlOpt_OptimizeTerminationCodeEnum.Success}">
                <Setter TargetName="termCodeBorder" Property="Style" Value="{StaticResource Ems_Border_Green}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding NlOptSolverWrapper.OptimizeTerminationException.OptimizeTerminationCode}" Value="{x:Static opt:NlOpt_OptimizeTerminationCodeEnum.Converged}">
                <Setter TargetName="termCodeBorder" Property="Style" Value="{StaticResource Ems_Border_Green}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding NlOptSolverWrapper.OptimizeTerminationException.OptimizeTerminationCode}" Value="{x:Static opt:NlOpt_OptimizeTerminationCodeEnum.Failed}">
                <Setter TargetName="termCodeBorder" Property="Style" Value="{StaticResource Ems_Border_Red}" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>




























    <DataTemplate x:Key="Results_FunctionIterationSelection_DataTemplate" DataType="{x:Type opt:NlOpt_Point}">
        <Border
            Margin="0,0,0,0"
            Padding="0"
            BorderBrush="{StaticResource EmsFaintBlueSolidBrush}"
            BorderThickness="0,0,0,1">
            <Grid Margin="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="0.9*" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    Grid.Column="0"
                    Margin="5,0,0,0"
                    Style="{StaticResource NumberTextBlock}"
                    Text="{Binding PointIndex}" />
                <TextBlock
                    Grid.Column="1"
                    Style="{StaticResource NumberTextBlock}"
                    Text="{Binding ObjectiveFunctionEval, Converter={StaticResource DefaultNumberConverter}}" />
            </Grid>
        </Border>
    </DataTemplate>


    <!--#region Results - Summary-->
    <DataTemplate x:Key="Results_FunctionIterationSummary_DataTemplate" DataType="{x:Type opt:NlOpt_Point}">
        <Border
            Margin="0,0,0,0"
            Padding="0"
            BorderBrush="{StaticResource EmsFaintBlueSolidBrush}"
            BorderThickness="0,0,0,1"
            Style="{DynamicResource MainItemBorder}">
            <Grid Margin="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="80" />
                    <ColumnDefinition Width=".6*" />
                    <ColumnDefinition Width="120" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    Grid.Column="0"
                    Margin="5,0,0,0"
                    Style="{StaticResource NumberTextBlock}"
                    Text="{Binding PointIndex}" />
                <ListView
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    ItemContainerStyle="{StaticResource ListViewContainerStyle_NoHighlight}"
                    ItemTemplateSelector="{StaticResource Wpf_ResultList_Input_DataTemplateSelector}"
                    ItemsSource="{Binding GhInput_Values}"
                    Style="{StaticResource Borderless_ListView}" />
                <TextBlock
                    Grid.Column="2"
                    Style="{StaticResource NumberTextBlock}"
                    Text="{Binding ObjectiveFunctionEval, Converter={StaticResource DefaultNumberConverter}}" />

                <ListView
                    Grid.Column="3"
                    ItemContainerStyle="{StaticResource ListViewContainerStyle_NoHighlight}"
                    ItemTemplateSelector="{StaticResource Results_FunctionIterationSummary_ProblemQuantity_DataTemplateSelector}"
                    ItemsSource="{Binding ProblemQuantityOutputs}"
                    Style="{StaticResource Borderless_ListView}" />
            </Grid>
        </Border>
    </DataTemplate>







    <DataTemplate x:Key="Results_FunctionIterationSummary_DataTemplate_InputParams_DoubleInputParam">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="10" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <TextBlock FontWeight="Bold" Text="{Binding Key.Name}" />
            <TextBlock
                Grid.Column="2"
                Style="{StaticResource NumberTextBlock}"
                Text="{Binding Value, Converter={StaticResource DefaultNumberConverter}}" />
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="Results_FunctionIterationSummary_DataTemplate_InputParams_PointInputParam">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="10" />
                <ColumnDefinition />
                <ColumnDefinition Width="10" />
                <ColumnDefinition />
                <ColumnDefinition Width="10" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <TextBlock FontWeight="Bold" Text="{Binding Key.Name}" />
            <TextBlock
                Grid.Column="2"
                Style="{StaticResource NumberTextBlock}"
                Text="{Binding Value.X, Converter={StaticResource DefaultNumberConverter}}" />
            <TextBlock
                Grid.Column="4"
                Style="{StaticResource NumberTextBlock}"
                Text="{Binding Value.Y, Converter={StaticResource DefaultNumberConverter}}" />
            <TextBlock
                Grid.Column="6"
                Style="{StaticResource NumberTextBlock}"
                Text="{Binding Value.Z, Converter={StaticResource DefaultNumberConverter}}" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="Results_FunctionIterationSummary_ProblemQuantity_ObjectiveFunction_DataTemplate">
        <Border
            Margin="0,2"
            Padding="2"
            Background="{StaticResource EmsGreenPanelBackground}"
            BorderBrush="Green"
            BorderThickness="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="120" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="80" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="150" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Border
                    Grid.RowSpan="3"
                    Grid.Column="0"
                    Width="30"
                    Height="30"
                    Padding="2"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="{StaticResource EmsFaintBlueSolidBrush}"
                    BorderBrush="{StaticResource EmsLightBlueSolidBrush}"
                    BorderThickness="1">
                    <TextBlock
                        HorizontalAlignment="Center"
                        Style="{StaticResource NumberTextBlock}"
                        Text="{Binding Key.InternalId}" />
                </Border>

                <Border
                    Grid.Row="0"
                    Grid.Column="2"
                    BorderBrush="{StaticResource EmsFaintBlueSolidBrush}"
                    BorderThickness="0,0,0,1">
                    <TextBlock FontWeight="Bold" Text="{Binding Key.TargetShapeDescription}" />
                </Border>
                <TextBlock
                    Grid.Row="1"
                    Grid.Column="2"
                    Style="{StaticResource Explanation_TextBlock}"
                    Text="{Binding Key.ResultFamilyGroupName}" />
                <TextBlock
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="4"
                    VerticalAlignment="Center"
                    Text="{Binding Key.ResultTypeDescription}" />
                <Grid
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="6">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        VerticalAlignment="Center"
                        FontSize="18"
                        RenderTransformOrigin="0.5,0.5"
                        Text="{Binding Key.WpfSummaryFunctionObjective_DisplayOnly.Item1}"
                        ToolTip="{Binding Key.WpfSummaryFunctionObjective_DisplayOnly.Item3}">
                        <TextBlock.RenderTransform>
                            <RotateTransform Angle="{Binding Key.WpfSummaryFunctionObjective_DisplayOnly.Item2}" />
                        </TextBlock.RenderTransform>
                    </TextBlock>
                    <TextBlock
                        Grid.Column="1"
                        Margin="2,0,0,0"
                        Style="{StaticResource NumberTextBlock}"
                        Text="{Binding Key.FunctionObjective_TargetValue, Converter={StaticResource DefaultNumberConverter}}"
                        Visibility="{Binding Key.WpfSummaryFunctionObjective_FunctionObjective_TargetValue_TextBlockVisibility}" />
                </Grid>
                <TextBlock
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="8"
                    VerticalAlignment="Center"
                    FontFamily="Lucida Console"
                    Text="{Binding Key.QuantityAggregatorOptions.WpfTextDescription}" />
                <TextBlock
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="10"
                    Style="{StaticResource NumberTextBlock}"
                    Text="{Binding Value.AggregatedValue, Converter={StaticResource DefaultNumberConverter}}" />
            </Grid>
        </Border>
    </DataTemplate>
    <DataTemplate x:Key="Results_FunctionIterationSummary_ProblemQuantity_Constraint_DataTemplate">
        <Border
            Margin="0,2"
            Padding="2"
            Background="LightGoldenrodYellow"
            BorderBrush="Orange"
            BorderThickness="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="120" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="80" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="150" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Border
                    Grid.RowSpan="3"
                    Grid.Column="0"
                    Width="30"
                    Height="30"
                    Padding="2"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="{StaticResource EmsFaintBlueSolidBrush}"
                    BorderBrush="{StaticResource EmsLightBlueSolidBrush}"
                    BorderThickness="1">
                    <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Text="{Binding Key.InternalId}" />
                </Border>

                <Border
                    Grid.Row="0"
                    Grid.Column="2"
                    BorderBrush="{StaticResource EmsFaintBlueSolidBrush}"
                    BorderThickness="0,0,0,1">
                    <TextBlock
                        FontFamily="Courier New"
                        FontWeight="Bold"
                        Text="{Binding Key.TargetShapeDescription}" />
                </Border>
                <TextBlock
                    Grid.Row="1"
                    Grid.Column="2"
                    Style="{StaticResource Explanation_TextBlock}"
                    Text="{Binding Key.ResultFamilyGroupName}" />
                <TextBlock
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="4"
                    VerticalAlignment="Center"
                    Text="{Binding Key.ResultTypeDescription}" />
                <TextBlock
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="6"
                    VerticalAlignment="Center"
                    FontFamily="Lucida Console">
                    <Run Text="f(x)" />
                    <Run Text="{Binding Key.WpfSummaryFunctionObjective_ConstraintObjective_DisplayOnly, Mode=OneWay}" />
                    <Run FontFamily="Courier New" Text="{Binding Key.ConstraintObjective_CompareValue, Mode=OneWay, Converter={StaticResource DefaultNumberConverter}}" />
                </TextBlock>
                <TextBlock
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="8"
                    VerticalAlignment="Center"
                    FontFamily="Lucida Console"
                    Text="{Binding Key.QuantityAggregatorOptions.WpfTextDescription}" />
                <TextBlock
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="10"
                    Style="{StaticResource NumberTextBlock}"
                    Text="{Binding Value.AggregatedValue, Converter={StaticResource DefaultNumberConverter}}" />
            </Grid>
        </Border>
    </DataTemplate>
    <DataTemplate x:Key="Results_FunctionIterationSummary_ProblemQuantity_OutputOnly_DataTemplate">
        <Border
            Margin="0,2"
            Padding="2"
            Background="LightGray"
            BorderBrush="Gray"
            BorderThickness="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="120" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="80" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="150" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Border
                    Grid.RowSpan="3"
                    Grid.Column="0"
                    Width="30"
                    Height="30"
                    Padding="2"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="{StaticResource EmsFaintBlueSolidBrush}"
                    BorderBrush="{StaticResource EmsLightBlueSolidBrush}"
                    BorderThickness="1">
                    <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Style="{StaticResource NumberTextBlock}"
                        Text="{Binding Key.InternalId}" />
                </Border>

                <Border
                    Grid.Row="0"
                    Grid.Column="2"
                    BorderBrush="{StaticResource EmsFaintBlueSolidBrush}"
                    BorderThickness="0,0,0,1">
                    <TextBlock FontWeight="Bold" Text="{Binding Key.TargetShapeDescription}" />
                </Border>
                <TextBlock
                    Grid.Row="1"
                    Grid.Column="2"
                    Style="{StaticResource Explanation_TextBlock}"
                    Text="{Binding Key.ResultFamilyGroupName}" />
                <TextBlock
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="4"
                    VerticalAlignment="Center"
                    Text="{Binding Key.ResultTypeDescription}" />
                <TextBlock
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="8"
                    VerticalAlignment="Center"
                    FontFamily="Lucida Console"
                    Text="{Binding Key.QuantityAggregatorOptions.WpfTextDescription}" />
                <TextBlock
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="10"
                    Style="{StaticResource NumberTextBlock}"
                    Text="{Binding Value.AggregatedValue, Converter={StaticResource DefaultNumberConverter}}" />
            </Grid>
        </Border>
    </DataTemplate>
    <!--#endregion-->

    <!--#region-->
    <DataTemplate x:Key="Results_DataSelection_ProblemQuantitiesSelection_ProblemQuantity" DataType="{x:Type probQuantity:ProblemQuantity}">
        <Grid
            Grid.Column="1"
            Margin="0,0,0,5"
            VerticalAlignment="Center"
            ToolTip="{Binding ResultTypeExplanation}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Border
                Grid.Row="0"
                Grid.RowSpan="2"
                Grid.Column="0"
                Width="30"
                Height="30"
                Padding="2"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Background="{StaticResource EmsFaintBlueSolidBrush}"
                BorderBrush="{StaticResource EmsLightBlueSolidBrush}"
                BorderThickness="1">
                <Border.Resources>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsFiniteElementData}" Value="{StaticResource False}">
                                <Setter Property="Text" Value="Gh" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsFiniteElementData}" Value="{StaticResource True}">
                                <Setter Property="Text" Value="Fe" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Resources>
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Border>
            <Border
                Grid.Row="0"
                Grid.Column="2"
                Style="{StaticResource LightBlue_BottomOnly_Border}">
                <TextBlock FontWeight="Bold" Text="{Binding TargetShapeDescription}" />
            </Border>
            <TextBlock
                Grid.Row="1"
                Grid.Column="2"
                Style="{StaticResource Explanation_TextBlock}"
                Text="{Binding ResultFamilyGroupName}" />
            <TextBlock
                Grid.Row="0"
                Grid.RowSpan="2"
                Grid.Column="4"
                VerticalAlignment="Center"
                Text="{Binding ResultTypeDescription}" />
        </Grid>
    </DataTemplate>
    <!--#endregion-->

    <!--#region Finite Element Result Selection Category Button-->
    <ControlTemplate x:Key="FiniteElementResultSelectionCategoryButtonContentTemplate" TargetType="{x:Type ButtonBase}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Border
                x:Name="border"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="True">
                <ContentPresenter
                    x:Name="contentPresenter"
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Content="{TemplateBinding Content}"
                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                    ContentTemplate="{TemplateBinding ContentTemplate}"
                    Focusable="False"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                    <ContentPresenter.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap" />
                            <Setter Property="TextAlignment" Value="Center" />
                        </Style>
                    </ContentPresenter.Resources>
                </ContentPresenter>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="True">
                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="Background" Value="#FFBEE6FD" />
                <Setter TargetName="border" Property="BorderBrush" Value="#FF3C7FB1" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="border" Property="Background" Value="#FFC4E5F6" />
                <Setter TargetName="border" Property="BorderBrush" Value="#FF2C628B" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter TargetName="border" Property="Background" Value="#FFBCDDEE" />
                <Setter TargetName="border" Property="BorderBrush" Value="#FF245A83" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="border" Property="Background" Value="#FFF4F4F4" />
                <Setter TargetName="border" Property="BorderBrush" Value="#FFADB2B5" />
                <Setter Property="Foreground" Value="#FF838383" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion-->

</ResourceDictionary>