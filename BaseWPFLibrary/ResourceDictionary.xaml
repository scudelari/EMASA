<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:cv="clr-namespace:BaseWPFLibrary.Converters"
    xmlns:lo="clr-namespace:BaseWPFLibrary.Others">

    <System:Boolean x:Key="True">True</System:Boolean>
    <System:Boolean x:Key="False">False</System:Boolean>

    <cv:InverseBooleanConverter x:Key="InverseBooleanConverter" />
    <cv:VisibilityToBool_FalseHidden_Converter x:Key="VisibilityToBool_FalseHidden_Converter" />

    <Color x:Key="EmsDarkBlueColor">#FF414163</Color>
    <SolidColorBrush x:Key="EmsDarkBlueSolidBrush" Color="{DynamicResource EmsDarkBlueColor}" />

    <Color x:Key="EmsLightBlueColor">#FF8E8ECB</Color>
    <SolidColorBrush x:Key="EmsLightBlueSolidBrush" Color="{DynamicResource EmsLightBlueColor}" />

    <Color x:Key="EmsFaintBlueColor">#FFC8C8E3</Color>
    <SolidColorBrush x:Key="EmsFaintBlueSolidBrush" Color="{DynamicResource EmsFaintBlueColor}" />

    <Color x:Key="EmsLightGrayColor">#FFbfbfbf</Color>
    <SolidColorBrush x:Key="EmsLightGraySolidBrush" Color="{DynamicResource EmsLightGrayColor}" />

    <Color x:Key="EmsFaintGrayColor">#FFf5f5f5</Color>
    <SolidColorBrush x:Key="EmsFaintGraySolidBrush" Color="{DynamicResource EmsFaintGrayColor}" />



    <Color x:Key="EmsExplanationColor">Gray</Color>
    <SolidColorBrush x:Key="EmsExplanationSolidBrush" Color="{DynamicResource EmsExplanationColor}" />

    <System:Double x:Key="EmsDefaultButtonHeight">26</System:Double>
    <System:Double x:Key="EmsDefaultTextBoxHeight">24</System:Double>

    <ControlTemplate x:Key="EmptyValTemplate" />

    <Style x:Key="Explanation_TextBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource EmsExplanationSolidBrush}" />
        <Setter Property="FontFamily" Value="Candara" />
    </Style>

    <Style x:Key="Blue_GroupBox" TargetType="GroupBox">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource EmsDarkBlueSolidBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderBrush" Value="DimGray" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <DockPanel>
                        <Grid
                            Margin="0"
                            Background="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type GroupBox}}, Path=BorderBrush}"
                            DockPanel.Dock="Top">
                            <ContentPresenter
                                Margin="5,2"
                                ContentSource="Header"
                                TextBlock.Foreground="White" />
                        </Grid>
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1,0,1,1"
                            CornerRadius="0">
                            <ContentPresenter Margin="{TemplateBinding Padding}" />
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CenterHeader_GroupBox" TargetType="GroupBox">
        <Style.Resources>
            <Style TargetType="Separator">
                <Setter Property="Background" Value="{DynamicResource EmsFaintBlueSolidBrush}" />
                <Setter Property="Margin" Value="0,5" />
            </Style>
        </Style.Resources>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Padding" Value="0,3,0,0" />
        <Setter Property="BorderBrush" Value="{DynamicResource EmsDarkBlueSolidBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <DockPanel>
                        <Border
                            Margin="15,0,15,0"
                            BorderBrush="{DynamicResource EmsDarkBlueSolidBrush}"
                            BorderThickness="0,0,0,1"
                            DockPanel.Dock="Top">
                            <ContentPresenter HorizontalAlignment="Center" ContentSource="Header" />
                        </Border>
                        <ContentPresenter Margin="{TemplateBinding Padding}" />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="GroupBox">
        <Setter Property="BorderBrush" Value="{DynamicResource EmsFaintBlueSolidBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <Style x:Key="DarkBlue_Border" TargetType="Border">
        <Setter Property="BorderBrush" Value="{DynamicResource EmsDarkBlueSolidBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="3" />
        <Setter Property="Margin" Value="5" />
    </Style>
    <Style x:Key="LightBlue_Border" TargetType="Border">
        <Setter Property="BorderBrush" Value="{DynamicResource EmsLightBlueSolidBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="3" />
        <Setter Property="Margin" Value="5" />
    </Style>

    <Style x:Key="DarkBlue_BottomOnly_Border" TargetType="Border">
        <Setter Property="BorderBrush" Value="{DynamicResource EmsDarkBlueSolidBrush}" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="CornerRadius" Value="0" />
    </Style>
    <Style x:Key="LightBlue_BottomOnly_Border" TargetType="Border">
        <Setter Property="BorderBrush" Value="{DynamicResource EmsLightBlueSolidBrush}" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="CornerRadius" Value="0" />
    </Style>
    <Style x:Key="BottomOnly_Border" TargetType="Border">
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="BorderBrush" Value="LightGray" />
    </Style>
    <Style x:Key="TopBottom_Border" TargetType="Border">
        <Setter Property="BorderThickness" Value="0,1,0,1" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="BorderBrush" Value="LightGray" />
    </Style>

    <Style x:Key="CodeText_TextBlock" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Courier New" />
    </Style>

    <Style x:Key="ExplText_StackPanel" TargetType="StackPanel">
        <Setter Property="Orientation" Value="Vertical" />
        <Style.Resources>
            <Style TargetType="TextBlock">
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="Foreground" Value="{DynamicResource EmsExplanationSolidBrush}" />
                <Setter Property="Margin" Value="0,1" />
            </Style>
            <Style TargetType="ContentControl">
                <Setter Property="Foreground" Value="{DynamicResource EmsExplanationSolidBrush}" />
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="Bullet_ListBox" TargetType="ListBox">
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Ellipse
                            Width="5"
                            Height="5"
                            Margin="5,0,5,0"
                            Fill="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}}" />
                        <TextBlock Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}}" Text="{Binding}" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource EmptyValTemplate}" />
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="BorderBrush" Value="Red" />
                <Setter Property="Background" Value="LightPink" />
                <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button">
        <Setter Property="Height" Value="{DynamicResource EmsDefaultButtonHeight}" />
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="H_Separator" TargetType="Separator">
        <Setter Property="Margin" Value="5" />
    </Style>

    <Style x:Key="GreenRedEllipse" TargetType="Ellipse">
        <Setter Property="StrokeThickness" Value="1" />
        <Setter Property="Stroke" Value="DimGray" />
        <Style.Triggers>
            <Trigger Property="Tag">
                <Trigger.Value>
                    <lo:TriState>True</lo:TriState>
                </Trigger.Value>
                <Setter Property="Fill">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                            <GradientStop Offset=".3" Color="DarkGreen" />
                            <GradientStop Offset=".4" Color="LightGreen" />
                            <GradientStop Offset=".7" Color="DarkGreen" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Tag">
                <Trigger.Value>
                    <lo:TriState>False</lo:TriState>
                </Trigger.Value>
                <Setter Property="Fill">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                            <GradientStop Offset=".3" Color="DarkRed" />
                            <GradientStop Offset=".4" Color="Red" />
                            <GradientStop Offset=".7" Color="DarkRed" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Tag">
                <Trigger.Value>
                    <lo:TriState>NotSet</lo:TriState>
                </Trigger.Value>
                <Setter Property="Fill">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                            <GradientStop Offset=".3" Color="Gray" />
                            <GradientStop Offset=".4" Color="LightGray" />
                            <GradientStop Offset=".7" Color="Gray" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>

            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="GreenGrayOnBoolTag_TextBlock" TargetType="TextBlock">
        <Style.Triggers>
            <Trigger Property="Tag">
                <Trigger.Value>
                    <System:Boolean>True</System:Boolean>
                </Trigger.Value>
                <Setter Property="Foreground" Value="Green" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="TextDecorations" Value="Underline" />
            </Trigger>
            <Trigger Property="Tag">
                <Trigger.Value>
                    <System:Boolean>False</System:Boolean>
                </Trigger.Value>
                <Setter Property="Foreground" Value="Gray" />
                <Setter Property="FontWeight" Value="Light" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RedOnFalseTag_TextBlock" TargetType="TextBlock">
        <Style.Triggers>
            <Trigger Property="Tag">
                <Trigger.Value>
                    <System:Boolean>False</System:Boolean>
                </Trigger.Value>
                <Setter Property="Foreground" Value="Red" />
                <Setter Property="TextDecorations" Value="Underline" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TriStateTag_TextBlock" TargetType="TextBlock">
        <Style.Triggers>
            <Trigger Property="Tag">
                <Trigger.Value>
                    <lo:TriState>True</lo:TriState>
                </Trigger.Value>
                <Setter Property="Foreground" Value="Green" />
            </Trigger>
            <Trigger Property="Tag">
                <Trigger.Value>
                    <lo:TriState>False</lo:TriState>
                </Trigger.Value>
                <Setter Property="Foreground" Value="Red" />
            </Trigger>
            <Trigger Property="Tag">
                <Trigger.Value>
                    <lo:TriState>NotSet</lo:TriState>
                </Trigger.Value>
                <Setter Property="Foreground" Value="Gray" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Stretch" TargetType="ListView">
        <Style.Resources>
            <Style TargetType="ListViewItem">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="SameHeightAsTextBox" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

</ResourceDictionary>